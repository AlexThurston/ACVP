<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs),
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="info" docName="draft-ietf-acvp-subkdf135-00" ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN"
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the
         full title is longer than 39 characters -->

    <title abbrev="Sym Alg JSON">ACVP Key Derivation Function Algorithm JSON Specification</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Barry Fussell" initials="B.F." role="editor"
            surname="Fussell">
      <organization>Cisco Systems, Inc.</organization>

      <address>
        <postal>
          <street>170 West Tasman Dr.</street>

          <!-- Reorder these if your country does things differently -->

          <city>San Jose</city>

          <region>CA</region>

          <code>95134</code>

          <country>USA</country>
        </postal>

        <email>bfussell@cisco.com</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <date month="June" year="2016" />

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill
         in the current day for you. If only the current year is specified, xml2rfc will fill
	 in the current day and month for you. If the year is not the current one, it is
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to
	 specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>General</area>

    <workgroup>TBD</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.
	 If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>acvp</keyword>
    <keyword>crypto</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
      <t>This document defines the JSON schema for using SP800-135 KDF algorithms with the ACVP specification.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>The Automated Crypto Validation Protocol (ACVP) defines a mechanism to automatically
              verify the cryptographic implementation of a software or hardware crypto module.
              The ACVP specification defines how a crypto module communicates with an ACVP
              server, including crypto capabilities negotiation, session management, authentication,
	      vector processing and more.  The ACVP specification does not define algorithm specific
	      JSON constructs for performing the crypto validation.  A series of ACVP sub-specifications
	      define the constructs for testing individual crypto algorithms.  Each sub-specification
	      addresses a specific class of crypto algorithms.  This sub-specification defines the JSON
	      constructs for testing SP800-135 KDF algorithms using ACVP.</t>

      <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
	document are to be interpreted in
	<xref target="RFC2119">RFC 2119</xref>.</t>
      </section>
    </section>

<section anchor="caps_reg" title="Capabilities Registration">
    <t>ACVP requires crypto modules to register their capabilities.  This allows the crypto
	module to advertise support for specific algorithms, notifying the ACVP server which
	algorithms need test vectors generated for the validation process.  This section
    describes the constructs for advertising support of SP800-135 KDF algorithms to the ACVP server.</t>

    <t>The algorithm capabilities are advertised as JSON objects within the 'algorithms'
	value of the ACVP registration message.  The 'algorithms' value is an array, where each
	array element is an individual JSON object defined in this section.  The 'algorithms'
	value is part of the 'capability_exchange' element of the ACVP JSON registration message.
	See the ACVP specification for details on the registration message.

	Each algorithm capability advertised is a self-contained JSON object.  The following
	JSON values are used for SP800-135 KDF algorithm capabilities:</t>

        <texttable anchor="caps_table" title="SP800-135 KDF Algorithm Capabilities JSON Values">
          <ttcol align="left">JSON Value</ttcol>
          <ttcol align="left">Description</ttcol>
          <ttcol align="left">JSON type</ttcol>
          <ttcol align="left">Valid Values</ttcol>
          <ttcol align="left">Optional</ttcol>

          <c>algorithm</c>
	  <c>The KDF to be validated.</c>
          <c>value</c>
          <c>See <xref target="supported_algs" /></c>
          <c>No</c>

          <c>aesval</c>
	  <c>The AES validation number or implemented in same implementation(SRTP).</c>
          <c>value</c>
          <c>same or value</c>
          <c>Yes</c>

          <c>hmacval</c>
	  <c>The HMAC validation number or implemented in same implementation(IKEv1, IKEv2, TLS, TPM).</c>
          <c>value</c>
          <c>same or value</c>
          <c>Yes</c>

          <c>shaval</c>
	  <c>The SHA validation number or implemented in same implementation(IKEv1, IKEv2, ANS X9.63-2001, SSH, SNMP, TLS, TPM).</c>
          <c>value</c>
          <c>same or value</c>
          <c>Yes</c>

	  <c>methods</c>
	  <c>Type of method or algorithm supported</c>
	  <c>array</c>
	  <c>See <xref target="supported_methods" /></c>
	  <c>Yes</c>

          <c>sha</c>
	  <c>SHA functions supported</c>
          <c>array</c>
          <c>SHA-1, SHA-224, SHA-256, SHA-384, SHA-512</c>
          <c>Yes</c>

          <c>keylen</c>
          <c>Key length minimum and maximum</c>
          <c>array</c>
          <c>0-65536</c>
          <c>Yes</c>

          <c>EngineID</c>
	  <c>SNMP: Two engine IDs in hexidecimal, can be the same</c>
          <c>array</c>
          <c>0-0xF</c>
          <c>Yes</c>

          <c>plen</c>
          <c>SNMP: Password minimum and maximum lengths</c>
          <c>array</c>
          <c>alphanumeric</c>
          <c>Yes</c>

          <c>kdr0</c>
          <c>SRTP: Key Derivation Rate 0</c>
          <c>array</c>
          <c>all, 1-24</c>
          <c>Yes</c>

          <c>kdr1</c>
          <c>SRTP: Key Derivation Rate 1</c>
          <c>array</c>
          <c>all, 1-24</c>
          <c>Yes</c>

          <c>field</c>
          <c>ANSI X9.63: Minimum and Maximum field size in </c>
          <c>array</c>
          <c>0-65536</c>
          <c>Yes</c>

          <c>sharedinfo</c>
          <c>ANSI X9.63: Minimum and Maximum sharedinfo size in bits</c>
          <c>array</c>
          <c>0-1024</c>
          <c>Yes</c>

          <c>initiator</c>
	  <c>IKE: Minimum and maximum lengths in bytes</c>
          <c>array</c>
          <c>0-65536</c>
          <c>Yes</c>

          <c>responder</c>
	  <c>IKE: Minimum and maximum lengths in bytes</c>
          <c>array</c>
          <c>0-65536</c>
          <c>Yes</c>

          <c>psk</c>
	  <c>IKE: Pre-shared key minimum and maximum lengths in bytes</c>
          <c>array</c>
          <c>0-65536</c>
          <c>Yes</c>

          <c>dhkey</c>
	  <c>IKE: Three Diffie-Hellman shared secret key lengths in bytes</c>
          <c>array</c>
          <c>0-65536</c>
          <c>Yes</c>

          <c>dkmlen</c>
	  <c>IKE: Minimum and maximum lengths of the 7 keys derived by SKEYSEED in bytes</c>
          <c>array</c>
          <c>0-65536</c>
          <c>Yes</c>

        </texttable>




	<t>Note: Some optional values are required depending on the algorithm.  For example, SHA-1
	    requires inbyte, inempty, inlen, and outlen.  Failure to provide these values will
	result in the ACVP server returning an error to the ACVP client during registration.</t>

	<section anchor="supported_algs" title="Supported SP800-135 KDF Algorithms">
	    <t>The following SP800-135 KDF algorithms may be advertised by the ACVP compliant crypto module:</t>
	    <t><list style="symbols">
		<t>IKEv1</t>
		<t>IKEv2</t>
		<t>TLS</t>
		<t>ANSI X9.63</t>
		<t>SSH</t>
		<t>SRTP</t>
		<t>SNMP</t>
		<t>TPM</t>
	    </list></t>
	</section>

	<section anchor="supported_methods" title="Supported SP800-135 KDF Methodss">
	    <t>The following SP800-135 KDF methods may be advertised by the ACVP compliant crypto module:</t>
	    <t><list style="symbols">
		<t>Digital Signature(IKEv1)</t>
		<t>Public Key Encryption(IKEv1)</t>
		<t>Pre-shared Key(IKEv1)</t>
		<t>TLS 1.0/1.1(TLS)</t>
		<t>TLS 1.2(TLS)</t>
		<t>TDES CBC(SSH)</t>
		<t>AES-128-CBC(SSH)</t>
		<t>AES-192-CBC(SSH)</t>
		<t>AES-256-CBC(SSH)</t>
		<t>AES-128-CBC(SRTP)</t>
		<t>AES-192-CBC(SRTP)</t>
		<t>AES-256-CBC(SRTP)</t>
	    </list></t>
	</section>
	<section anchor="capex_data" title="Capabilities for each KDF Algorithm">
	<t>The following table describes the SP800-135 KDF IKEv1 JSON elements of the Test Group JSON object.</t>
	    <texttable anchor="caps_table1" title="Capabilities Exchange JSON Object">
		<ttcol align="left">JSON Value</ttcol>
		<ttcol align="left">Description</ttcol>
		<ttcol align="left">JSON type</ttcol>
		<ttcol align="left">Optional</ttcol>

          <c>algorithm</c>
	  <c>IKEv1</c>
          <c>value</c>
          <c>No</c>

          <c>hmacval</c>
	  <c>The HMAC validation number or implemented in same implementation.</c>
          <c>value</c>
          <c>No</c>

          <c>shaval</c>
	  <c>The SHA validation number or implemented in same implementation.</c>
          <c>value</c>
          <c>No</c>

		<c>methods</c>
		<c>See <xref target="supported_methods" /></c>
		<c>array</c>
		<c>No</c>

		<c>initiator</c>
		<c>Minimum and maximum initiator nonce sizes between 128 and 2048 bites</c>
		<c>array</c>
		<c>No</c>

		<c>responder</c>
		<c>Minimum and maximum responder nonce sizes between 128 and 2048 bites</c>
		<c>array</c>
		<c>No</c>

		<c>psk</c>
		<c>Minimum and maximum pre-shared key sizes in bytes</c>
		<c>array</c>
		<c>No</c>

		<c>dhkey</c>
		<c>Select one to three DH shared secret bit lengths</c>
		<c>array</c>
		<c>No</c>

		<c>sha</c>
		<c>SHA functions supported</c>
		<c>array</c>
		<c>No</c>

	    </texttable>

	  <t>The following table describes the SP800-135 KDF IKEv2 JSON elements of the Capabilities Exchange JSON object.</t>
	    <texttable anchor="caps_table2" title="Capabilities Exchange JSON Object">
		<ttcol align="left">JSON Value</ttcol>
		<ttcol align="left">Description</ttcol>
		<ttcol align="left">JSON type</ttcol>
		<ttcol align="left">Optional</ttcol>

          <c>algorithm</c>
	  <c>IKEv2</c>
          <c>value</c>
          <c>No</c>

          <c>hmacval</c>
	  <c>The HMAC validation number or implemented in same implementation.</c>
          <c>value</c>
          <c>No</c>

          <c>shaval</c>
	  <c>The SHA validation number or implemented in same implementation.</c>
          <c>value</c>
          <c>No</c>

		<c>initiator</c>
		<c>Minimum and maximum initiator nonce sizes between 128 and 2048 bites</c>
		<c>array</c>
		<c>No</c>

		<c>responder</c>
		<c>Minimum and maximum responder nonce sizes between 128 and 2048 bites</c>
		<c>array</c>
		<c>No</c>

		<c>dhkey</c>
		<c>Select one to three DH shared secret bit lengths</c>
		<c>array</c>
		<c>No</c>

		<c>sha</c>
		<c>SHA functions supported</c>
		<c>array</c>
		<c>No</c>

		<c>dkm</c>
		<c>Minimum and maximum lengths of the 7 keys derived by SKEYSEED in bytes</c>
		<c>array</c>
		<c>No</c>

	    </texttable>

	  <t>The following table describes the SP800-135 KDF ANS X9.63 JSON elements of the Capabilities Exchange JSON object.</t>
	    <texttable anchor="caps_table3" title="Capabilities Exchange JSON Object">
		<ttcol align="left">JSON Value</ttcol>
		<ttcol align="left">Description</ttcol>
		<ttcol align="left">JSON type</ttcol>
		<ttcol align="left">Optional</ttcol>

          <c>algorithm</c>
	  <c>ANS X9.63</c>
          <c>value</c>
          <c>No</c>

          <c>shaval</c>
	  <c>The SHA validation number or implemented in same implementation.</c>
          <c>value</c>
          <c>No</c>

		<c>field</c>
		<c>Minimum and maximum field size</c>
		<c>array</c>
		<c>No</c>

		<c>sharedinfo</c>
		<c>Minimum and maximum sharedinfo length</c>
		<c>array</c>
		<c>No</c>

		<c>keylen</c>
		<c>Minimum and maximum key lengths, maximum less than or equal to 4096</c>
		<c>array</c>
		<c>No</c>

		<c>sha</c>
		<c>SHA functions supported</c>
		<c>array</c>
		<c>No</c>

	    </texttable>

	  <t>The following table describes the SP800-135 KDF SSH JSON elements of the Capabilities Exchange JSON object.</t>
	    <texttable anchor="caps_table4" title="Capabilities Exchange JSON Object">
		<ttcol align="left">JSON Value</ttcol>
		<ttcol align="left">Description</ttcol>
		<ttcol align="left">JSON type</ttcol>
		<ttcol align="left">Optional</ttcol>

          <c>algorithm</c>
	  <c>SSH</c>
          <c>value</c>
          <c>No</c>

          <c>shaval</c>
	  <c>The SHA validation number or implemented in same implementation.</c>
          <c>value</c>
          <c>No</c>

		<c>methods</c>
		<c>See <xref target="supported_methods" /></c>
		<c>array</c>
		<c>No</c>

		<c>sha</c>
		<c>SHA functions supported</c>
		<c>array</c>
		<c>No</c>

	    </texttable>


	  <t>The following table describes the SP800-135 KDF SRTP JSON elements of the Capabilities Exchange JSON object.</t>
	    <texttable anchor="caps_table5" title="Capabilities Exchange JSON Object">
		<ttcol align="left">JSON Value</ttcol>
		<ttcol align="left">Description</ttcol>
		<ttcol align="left">JSON type</ttcol>
		<ttcol align="left">Optional</ttcol>

          <c>algorithm</c>
	  <c>SRTP</c>
          <c>value</c>
          <c>No</c>

          <c>aesval</c>
	  <c>The AES validation number or implemented in same implementation.</c>
          <c>value</c>
          <c>No</c>

		<c>methods</c>
		<c>See <xref target="supported_methods" /></c>
		<c>array</c>
		<c>No</c>

		<c>kdr0</c>
		<c>Key Derivation Rate 0</c>
		<c>array or all</c>
		<c>No</c>

		<c>kdr1</c>
		<c>Key Derivation Rate 0</c>
		<c>array or all</c>
		<c>No</c>

	    </texttable>

	  <t>The following table describes the SP800-135 KDF SNMP JSON elements of the Capabilities Exchange JSON object.</t>
	    <texttable anchor="caps_table6" title="Capabilities Exchange JSON Object">
		<ttcol align="left">JSON Value</ttcol>
		<ttcol align="left">Description</ttcol>
		<ttcol align="left">JSON type</ttcol>
		<ttcol align="left">Optional</ttcol>

          <c>algorithm</c>
	  <c>SNMP</c>
          <c>value</c>
          <c>No</c>

          <c>shaval</c>
	  <c>The SHA validation number or implemented in same implementation.</c>
          <c>value</c>
          <c>No</c>

		<c>EngineID</c>
		<c>Engine ID</c>
		<c>value</c>
		<c>No</c>

		<c>plen</c>
		<c>Password length</c>
		<c>array</c>
		<c>No</c>

	    </texttable>

	  <t>The following table describes the SP800-135 KDF TLS JSON elements of the Capabilities Exchange JSON object.</t>
	    <texttable anchor="caps_table7" title="Capabilities Exchange JSON Object">
		<ttcol align="left">JSON Value</ttcol>
		<ttcol align="left">Description</ttcol>
		<ttcol align="left">JSON type</ttcol>
		<ttcol align="left">Optional</ttcol>

          <c>algorithm</c>
	  <c>TLS</c>
          <c>value</c>
          <c>No</c>

          <c>hmacval</c>
	  <c>The HMAC validation number or implemented in same implementation.</c>
          <c>value</c>
          <c>No</c>

          <c>shaval</c>
	  <c>The SHA validation number or implemented in same implementation.</c>
          <c>value</c>
          <c>No</c>

		<c>methods</c>
		<c>See <xref target="supported_methods" /></c>
		<c>array</c>
		<c>No</c>

		<c>sha</c>
		<c>SHA functions supported</c>
		<c>array</c>
		<c>No</c>

	    </texttable>


	  <t>The following table describes the SP800-135 KDF TPM JSON elements of the Capabilities Exchange JSON object.</t>
	    <texttable anchor="caps_table8" title="Capabilities Exchange JSON Object">
		<ttcol align="left">JSON Value</ttcol>
		<ttcol align="left">Description</ttcol>
		<ttcol align="left">JSON type</ttcol>
		<ttcol align="left">Optional</ttcol>

          <c>algorithm</c>
	  <c>TPM</c>
          <c>value</c>
          <c>No</c>

	    </texttable>
	</section>
    </section>

    <section anchor="test_vectors" title="Test Vectors">
	<t>The ACVP server provides test vectors to the ACVP client, which are then processed and returned to
	    the ACVP server for validation.  A typical ACVP validation session would require multiple test vector
	    sets to be downloaded and processed by the ACVP client.  Each test vector set represents an individual
	    Key Derivation Function (KDF), such as SNMP, SSH,  etc.  This section
	describes the JSON schema for a test vector set used with SP800-135 KDF algorithms.</t>

	<t>The test vector set JSON schema is a multi-level hierarchy that contains meta data for the entire
	vector set as well as individual test vectors to be processed by the ACVP client.The following table describes the JSON elements at the top level of the hierarchy.
	</t>
	<texttable anchor="vs_top_table" title="Vector Set JSON Object">
          <ttcol align="left">JSON Value</ttcol>
          <ttcol align="left">Description</ttcol>
          <ttcol align="left">JSON type</ttcol>

	  <c>acv_version</c>
	  <c>Protocol version identifier</c>
          <c>value</c>

	  <c>vs_id</c>
	  <c>Unique numeric identifier for the vector set</c>
          <c>value</c>

	  <c>algorithm</c>
	  <c>See <xref target="supported_algs" /></c>
          <c>value</c>

	  <c>test_groups</c>
	  <c>Array of test group JSON objects, which are defined in <xref target="tgjs" /></c>
          <c>array</c>
	</texttable>

	<section title="Test Groups JSON Schema" anchor="tgjs">
	    <t>The test_groups element at the top level in the test vector JSON object is an array of test
		groups.  Test vectors are grouped into similar test cases to reduce the amount of data transmitted
	        in the vector set.  For instance, all test vectors that use the same key size would be grouped
	        together.  The Test Group JSON object contains meta data that applies to all test vectors within
	        the group. The following table describes the secure hash JSON elements of the Test Group JSON object.</t>

	<t> The KDF test group for IKEv1 is as follows:</t>
	  <texttable anchor="vs_tg_table1" title="Test Group JSON Object">
          <ttcol align="left">JSON Value</ttcol>
	  <ttcol align="left">Description</ttcol>
	  <ttcol align="left">JSON type</ttcol>
	  <ttcol align="left">Optional</ttcol>

	  <c>method</c>
	  <c>The method used for the test vectors.  See <xref target="supported_methods" /> for possible values.</c>
          <c>value</c>
          <c>No</c>

	  <c>gxylen</c>
	  <c>Diffie-Hellman shared secret length</c>
	  <c>value</c>
          <c>No</c>

	  <c>sha</c>
	  <c>The SHA value used.</c>
          <c>value</c>
          <c>No</c>

	  <c>initlen</c>
	  <c>Length of initiator nonce.</c>
	  <c>value</c>
          <c>No</c>

	  <c>resplen</c>
	  <c>Length of responder nonce.</c>
	  <c>value</c>
          <c>No</c>

	  <c>pkeylen</c>
	  <c>Pre-shared key length.</c>
	  <c>value</c>
          <c>Yes</c>

	  <c>tests</c>
	  <c>Array of individual test vector JSON objects, which are defined in <xref target="tvjs" /></c>
	  <c>array</c>
          <c>No</c>
	</texttable>

	<t> The KDF test group for IKEv2 is as follows:</t>
	<texttable anchor="vs_tg_table2" title="Vector Group JSON Object">
          <ttcol align="left">JSON Value</ttcol>
          <ttcol align="left">Description</ttcol>
          <ttcol align="left">JSON type</ttcol>
	  <ttcol align="left">Optional</ttcol>

	  <c>gxylen</c>
	  <c>Diffie-Hellman shared secret length</c>
	  <c>value</c>
          <c>No</c>

	  <c>sha</c>
	  <c>The SHA type used for the test vectors.</c>
          <c>value</c>
          <c>No</c>

	  <c>initlen</c>
	  <c>Length of initiator nonce.</c>
	  <c>value</c>
          <c>No</c>

	  <c>resplen</c>
	  <c>Length of responder nonce.</c>
	  <c>value</c>
          <c>No</c>

	  <c>dkm</c>
	  <c>Derived Key Matrerial for the parent security authority in bytes</c>
	  <c>value</c>
          <c>No</c>

	  <c>dkmchild</c>
	  <c>Derived Key Matrerial for the child security authority in bytes</c>
	  <c>value</c>
          <c>No</c>

	  <c>tests</c>
	  <c>Array of individual test vector JSON objects, which are defined in <xref target="tvjs" /></c>
	  <c>array</c>
          <c>No</c>
	</texttable>

	<t> The KDF test group for ANS X9.63 is as follows:</t>
	<texttable anchor="vs_tg_table3" title="Vector Group JSON Object">
          <ttcol align="left">JSON Value</ttcol>
          <ttcol align="left">Description</ttcol>
          <ttcol align="left">JSON type</ttcol>
	  <ttcol align="left">Optional</ttcol>

	  <c>sha</c>
	  <c>The SHA type used for the test vectors.</c>
          <c>value</c>
          <c>No</c>

	  <c>shseclen</c>
	  <c>The shared secret length used in bits.</c>
          <c>value</c>
          <c>No</c>

	  <c>shinfolen</c>
	  <c>The sharedinfo length used in bits.</c>
          <c>value</c>
          <c>No</c>

	  <c>keylen</c>
	  <c>The encryption key length used in bits.</c>
          <c>value</c>
          <c>No</c>

	  <c>tests</c>
	  <c>Array of individual test vector JSON objects, which are defined in <xref target="tvjs" /></c>
	  <c>array</c>
          <c>No</c>
	</texttable>

	<t> The KDF test group for SSH is as follows:</t>
	<texttable anchor="vs_tg_table4" title="Vector Group JSON Object">
          <ttcol align="left">JSON Value</ttcol>
          <ttcol align="left">Description</ttcol>
          <ttcol align="left">JSON type</ttcol>
	  <ttcol align="left">Optional</ttcol>


	  <c>sha</c>
	  <c>The SHA type used for the test vectors.</c>
          <c>value</c>
          <c>No</c>

	  <c>shseclen</c>
	  <c>The shared secret length used in bits.</c>
          <c>value</c>
          <c>No</c>

	  <c>ivlen</c>
	  <c>The IV length used in bits.</c>
          <c>value</c>
          <c>No</c>

	  <c>keylen</c>
	  <c>The encryption key length used in bits.</c>
          <c>value</c>
          <c>No</c>

	  <c>tests</c>
	  <c>Array of individual test vector JSON objects, which are defined in <xref target="tvjs" /></c>
	  <c>array</c>
          <c>No</c>
	</texttable>

	<t> The KDF test group for SRTP is as follows:</t>
	<texttable anchor="vs_tg_table5" title="Vector Group JSON Object">
          <ttcol align="left">JSON Value</ttcol>
          <ttcol align="left">Description</ttcol>
          <ttcol align="left">JSON type</ttcol>
	  <ttcol align="left">Optional</ttcol>


	  <c>method</c>
	  <c>The method used for the test vectors.  See <xref target="supported_methods" /> for possible values.</c>
          <c>value</c>
          <c>No</c>

	  <c>kdr</c>
	  <c>The Key Derivation Rate used.</c>
          <c>value</c>
          <c>No</c>

	  <c>tests</c>
	  <c>Array of individual test vector JSON objects, which are defined in <xref target="tvjs" /></c>
	  <c>array</c>
          <c>No</c>
	</texttable>

	<t> The KDF test group for SNMP is as follows:</t>
	<texttable anchor="vs_tg_table6" title="Vector Group JSON Object">
          <ttcol align="left">JSON Value</ttcol>
          <ttcol align="left">Description</ttcol>
          <ttcol align="left">JSON type</ttcol>
	  <ttcol align="left">Optional</ttcol>


	  <c>engineID</c>
	  <c>engine ID as hexidecimal string</c>
          <c>value</c>
          <c>No</c>

	  <c>plen</c>
	  <c>Length of password.</c>
	  <c>value</c>
          <c>No</c>

	  <c>tests</c>
	  <c>Array of individual test vector JSON objects, which are defined in <xref target="tvjs" /></c>
	  <c>array</c>
          <c>No</c>
	</texttable>

	<t> The KDF test group for TLS is as follows:</t>
	<texttable anchor="vs_tg_table7" title="Vector Group JSON Object">
          <ttcol align="left">JSON Value</ttcol>
          <ttcol align="left">Description</ttcol>
          <ttcol align="left">JSON type</ttcol>
	  <ttcol align="left">Optional</ttcol>


	  <c>method</c>
	  <c>The method used for the test vectors.  See <xref target="supported_methods" /> for possible values.</c>
          <c>value</c>
          <c>No</c>

	  <c>pmlen</c>
	  <c>Pre-master secret length in bits.</c>
	  <c>value</c>
          <c>No</c>

	  <c>kblen</c>
	  <c>Key block length in bits.</c>
	  <c>value</c>
          <c>No</c>

	  <c>tests</c>
	  <c>Array of individual test vector JSON objects, which are defined in <xref target="tvjs" /></c>
	  <c>array</c>
          <c>No</c>
	</texttable>

	<t> The KDF test group for TPM is as follows:</t>
	<texttable anchor="vs_tg_table8" title="Vector Group JSON Object">
          <ttcol align="left">JSON Value</ttcol>
          <ttcol align="left">Description</ttcol>
          <ttcol align="left">JSON type</ttcol>
	  <ttcol align="left">Optional</ttcol>


	  <c>tests</c>
	  <c>Array of individual test vector JSON objects, which are defined in <xref target="tvjs" /></c>
	  <c>array</c>
          <c>No</c>
	</texttable>

          </section>

	<section title="Test Vectors JSON Schema" anchor="tvjs">
	    <t>Each test group contains an array of one or more test vectors.  Each test vector is a JSON object
		that represents a single test case to be processed by the ACVP client.  The following table describes
	    the JSON elements for each SP800-135 KDF IKEv1 test vector.</t>
	    <texttable anchor="vs_tc_table1" title="Test Case JSON Object">
		<ttcol align="left">JSON Value</ttcol>
		<ttcol align="left">Description</ttcol>
		<ttcol align="left">JSON type</ttcol>
		<ttcol align="left">Optional</ttcol>

		<c>tc_id</c>
		<c>Unique numeric identifier for the test case</c>
		<c>value</c>
		<c>No</c>

		<c>ckyi</c>
		<c>Initiator's cookie</c>
		<c>value</c>
		<c>No</c>

		<c>ckyr</c>
		<c>Responder's cookie</c>
		<c>value</c>
		<c>No</c>

		<c>ni</c>
		<c>Value of the initiator nonce</c>
		<c>value</c>
		<c>No</c>

		<c>nr</c>
		<c>Value of the responder nonce</c>
		<c>value</c>
		<c>No</c>

		<c>gxy</c>
		<c>Diffie-Hellman shared secret</c>
		<c>value</c>
		<c>No</c>

		<c>pskey</c>
		<c>Value of the pre-shared key</c>
		<c>value</c>
		<c>Yes</c>

	    </texttable>


	     <t>The following table describes the JSON elements for each SP800-135 KDF IKEv2 test vector.</t>
	    <texttable anchor="vs_tc_table2" title="Test Case JSON Object">
		<ttcol align="left">JSON Value</ttcol>
		<ttcol align="left">Description</ttcol>
		<ttcol align="left">JSON type</ttcol>
		<ttcol align="left">Optional</ttcol>

		<c>tc_id</c>
		<c>Unique numeric identifier for the test case</c>
		<c>value</c>
		<c>No</c>

		<c>ni</c>
		<c>Value of the initiator nonce</c>
		<c>value</c>
		<c>No</c>

		<c>nr</c>
		<c>Value of the responder nonce</c>
		<c>value</c>
		<c>No</c>

		<c>gir</c>
		<c>Diffie-Hellman shared secret</c>
		<c>value</c>
		<c>No</c>

		<c>girnew</c>
		<c>New Diffie-Hellman shared secret</c>
		<c>value</c>
		<c>No</c>

		<c>spii</c>
		<c>security parameter indice of the initiator</c>
		<c>value</c>
		<c>No</c>

		<c>spir</c>
		<c>security parameter indice of the responder</c>
		<c>value</c>
		<c>Yes</c>

	    </texttable>

            <t>The following table describes the JSON elements for each SP800-135 KDF ANS X9.63 test vector.</t>
	    <texttable anchor="vs_tc_table3" title="Test Case JSON Object">
		<ttcol align="left">JSON Value</ttcol>
		<ttcol align="left">Description</ttcol>
		<ttcol align="left">JSON type</ttcol>
		<ttcol align="left">Optional</ttcol>

		<c>tc_id</c>
		<c>Unique numeric identifier for the test case</c>
		<c>value</c>
		<c>No</c>

		<c>Z</c>
		<c>Shared secret</c>
		<c>value</c>
		<c>No</c>

		<c>sharedinfo</c>
		<c>Shared information</c>
		<c>value</c>
		<c>No</c>

	    </texttable>

            <t>The following table describes the JSON elements for each SP800-135 KDF SSH test vector.</t>
	    <texttable anchor="vs_tc_table4" title="Test Case JSON Object">
		<ttcol align="left">JSON Value</ttcol>
		<ttcol align="left">Description</ttcol>
		<ttcol align="left">JSON type</ttcol>
		<ttcol align="left">Optional</ttcol>

		<c>tc_id</c>
		<c>Unique numeric identifier for the test case</c>
		<c>value</c>
		<c>No</c>

		<c>K</c>
		<c>Shared secret value</c>
		<c>value</c>
		<c>No</c>

		<c>h</c>
		<c>Hash value</c>
		<c>value</c>
		<c>No</c>

		<c>sessionid</c>
		<c>Session ID value</c>
		<c>value</c>
		<c>No</c>

	    </texttable>

            <t>The following table describes the JSON elements for each SP800-135 KDF SRTP test vector.</t>
	    <texttable anchor="vs_tc_table5" title="Test Case JSON Object">
		<ttcol align="left">JSON Value</ttcol>
		<ttcol align="left">Description</ttcol>
		<ttcol align="left">JSON type</ttcol>
		<ttcol align="left">Optional</ttcol>

		<c>tc_id</c>
		<c>Unique numeric identifier for the test case</c>
		<c>value</c>
		<c>No</c>

		<c>kmaster</c>
		<c>Master key value</c>
		<c>value</c>
		<c>No</c>

		<c>msalt</c>
		<c>Master salt value</c>
		<c>value</c>
		<c>No</c>

		<c>kdr</c>
		<c>Key derivation rate value</c>
		<c>value</c>
		<c>No</c>

		<c>index</c>
		<c>Index value for SCTP</c>
		<c>value</c>
		<c>No</c>

		<c>indexsrtcp</c>
		<c>Index value for SRTCP</c>
		<c>value</c>
		<c>No</c>

	    </texttable>


	     <t>The following table describes the JSON elements for each SP800-135 KDF SNMP test vector.</t>
	    <texttable anchor="vs_tc_table6" title="Test Case JSON Object">
		<ttcol align="left">JSON Value</ttcol>
		<ttcol align="left">Description</ttcol>
		<ttcol align="left">JSON type</ttcol>
		<ttcol align="left">Optional</ttcol>

		<c>tc_id</c>
		<c>Unique numeric identifier for the test case</c>
		<c>value</c>
		<c>No</c>

		<c>password</c>
		<c>Password value</c>
		<c>value</c>
		<c>No</c>
	    </texttable>

	     <t>The following table describes the JSON elements for each SP800-135 KDF TLS test vector.</t>
	    <texttable anchor="vs_tc_table7" title="Test Case JSON Object">
		<ttcol align="left">JSON Value</ttcol>
		<ttcol align="left">Description</ttcol>
		<ttcol align="left">JSON type</ttcol>
		<ttcol align="left">Optional</ttcol>

		<c>tc_id</c>
		<c>Unique numeric identifier for the test case</c>
		<c>value</c>
		<c>No</c>

		<c>pmsecret</c>
		<c>Pre-master secret value</c>
		<c>value</c>
		<c>No</c>

		<c>shrnd</c>
		<c>Server Hello random value</c>
		<c>value</c>
		<c>No</c>

		<c>chrnd</c>
		<c>Client Hello random value</c>
		<c>value</c>
		<c>No</c>

		<c>srnd</c>
		<c>Server random value</c>
		<c>value</c>
		<c>No</c>

		<c>crnd</c>
		<c>Client random value</c>
		<c>value</c>
		<c>No</c>

	    </texttable>

	     <t>The following table describes the JSON elements for each SP800-135 KDF TPM test vector.</t>
	    <texttable anchor="vs_tc_table8" title="Test Case JSON Object">
		<ttcol align="left">JSON Value</ttcol>
		<ttcol align="left">Description</ttcol>
		<ttcol align="left">JSON type</ttcol>
		<ttcol align="left">Optional</ttcol>

		<c>tc_id</c>
		<c>Unique numeric identifier for the test case</c>
		<c>value</c>
		<c>No</c>

		<c>len</c>
		<c>Length of the message or seed</c>
		<c>value</c>
		<c>No</c>

		<c>auth</c>
		<c>Value of the authentication</c>
		<c>value</c>
		<c>No</c>

		<c>nonce_even</c>
		<c>Value of the nonce even</c>
		<c>value</c>
		<c>No</c>

		<c>nonce_odd</c>
		<c>Value of the nonce odd</c>
		<c>value</c>
		<c>No</c>

		<c>skey</c>
		<c>SKEY value generated</c>
		<c>value</c>
		<c>No</c>
	    </texttable>

	</section>
    </section>

    <section anchor="vector_responses" title="Test Vector Responses">
	<t>After the ACVP client downloads and processes a vector set, it must send the resonse vectors
	back to the ACVP server.  The following table describes the JSON object that represents a vector set response for IKEv1.</t>

	<texttable anchor="vr_top_table1" title="Vector Set Response JSON Object">
          <ttcol align="left">JSON Value</ttcol>
          <ttcol align="left">Description</ttcol>
          <ttcol align="left">JSON type</ttcol>

	  <c>acv_version</c>
	  <c>Protocol version identifier</c>
          <c>value</c>

	  <c>vs_id</c>
	  <c>Unique numeric identifier for the vector set</c>
          <c>value</c>

	  <c>skeyid</c>
	  <c>Results of the extraction step.</c>
	  <c>value</c>

	  <c>skeyid_d</c>
	  <c>Results of the expansion step</c>
	  <c>value</c>

	  <c>skeyid_a</c>
	  <c>Results of the expansion step</c>
	  <c>value</c>

	  <c>skeyid_e</c>
	  <c>Results of the expansion step</c>
	  <c>value</c>
	</texttable>

	<t>The following table describes the JSON object that represents a vector set response for IKEv2.</t>

	<texttable anchor="vr_top_table2" title="Vector Set Response JSON Object">
          <ttcol align="left">JSON Value</ttcol>
          <ttcol align="left">Description</ttcol>
          <ttcol align="left">JSON type</ttcol>

	  <c>acv_version</c>
	  <c>Protocol version identifier</c>
          <c>value</c>

	  <c>vs_id</c>
	  <c>Unique numeric identifier for the vector set</c>
          <c>value</c>

	  <c>skeyseed</c>
	  <c>Results of the extraction step.</c>
	  <c>value</c>

	  <c>skeyseed_rekey</c>
	  <c>Results of the newly created skeyid</c>
	  <c>value</c>

	  <c>dkm</c>
	  <c>Derived key Material from expansion step</c>
	  <c>value</c>

	  <c>dkm_child</c>
	  <c>Expansion step results for child SA</c>
	  <c>value</c>

	  <c>dkm_child_dh</c>
	  <c>Expansion step results for child SA DH</c>
	  <c>value</c>
	</texttable>

	<t>The following table describes the JSON object that represents a vector set response for ANS X9.63.</t>

	<texttable anchor="vr_top_table3" title="Vector Set Response JSON Object">
          <ttcol align="left">JSON Value</ttcol>
          <ttcol align="left">Description</ttcol>
          <ttcol align="left">JSON type</ttcol>

	  <c>acv_version</c>
	  <c>Protocol version identifier</c>
          <c>value</c>

	  <c>vs_id</c>
	  <c>Unique numeric identifier for the vector set</c>
          <c>value</c>

	  <c>kdata result value</c>
	  <c>Key data value.</c>
	  <c>value</c>
	</texttable>


	<t>The following table describes the JSON object that represents a vector set response for SSH.</t>	<texttable anchor="vr_top_table4" title="Vector Set Response JSON Object">
          <ttcol align="left">JSON Value</ttcol>
          <ttcol align="left">Description</ttcol>
          <ttcol align="left">JSON type</ttcol>

	  <c>acv_version</c>
	  <c>Protocol version identifier</c>
          <c>value</c>

	  <c>vs_id</c>
	  <c>Unique numeric identifier for the vector set</c>
          <c>value</c>

	  <c>initiv_cs</c>
	  <c>Client to server initial IV</c>
	  <c>value</c>

	  <c>initiv_sc</c>
	  <c>Server to client initial IV</c>
	  <c>value</c>

	  <c>ekey_cs</c>
	  <c>Client to server encryption key</c>
	  <c>value</c>

	  <c>ekey_sc</c>
	  <c>Server to client eencryption key</c>
	  <c>value</c>

	  <c>ikey_cs</c>
	  <c>Client to server integrity key</c>
	  <c>value</c>

	  <c>ikey_sc</c>
	  <c>Server to client integrity key</c>
	  <c>value</c>

	</texttable>

	<t>The following table describes the JSON object that represents a vector set response for SRTP.</t>	<texttable anchor="vr_top_table5" title="Vector Set Response JSON Object">
          <ttcol align="left">JSON Value</ttcol>
          <ttcol align="left">Description</ttcol>
          <ttcol align="left">JSON type</ttcol>

	  <c>acv_version</c>
	  <c>Protocol version identifier</c>
          <c>value</c>

	  <c>vs_id</c>
	  <c>Unique numeric identifier for the vector set</c>
          <c>value</c>

	  <c>srtp_ke</c>
	  <c>SRTP encryption key</c>
	  <c>value</c>

	  <c>srtp_ka</c>
	  <c>SRTP authentication key</c>
	  <c>value</c>

	  <c>srtp_ks</c>
	  <c>SRTP salting key</c>
	  <c>value</c>

	  <c>srtcp_ke</c>
	  <c>SRTCP encryption key</c>
	  <c>value</c>

	  <c>srtcp_ka</c>
	  <c>SRTCP authentication key</c>
	  <c>value</c>

	  <c>srtcp_ks</c>
	  <c>SRTCP salting key</c>
	  <c>value</c>

	</texttable>

	<t>The following table describes the JSON object that represents a vector set response for SNMP.</t>

	<texttable anchor="vr_top_table6" title="Vector Set Response JSON Object">
          <ttcol align="left">JSON Value</ttcol>
          <ttcol align="left">Description</ttcol>
          <ttcol align="left">JSON type</ttcol>

	  <c>acv_version</c>
	  <c>Protocol version identifier</c>
          <c>value</c>

	  <c>vs_id</c>
	  <c>Unique numeric identifier for the vector set</c>
          <c>value</c>

	  <c>skey</c>
	  <c>Shared key value.</c>
	  <c>value</c>

	</texttable>

	<t>The following table describes the JSON object that represents a vector set response for TLS.</t>

	<texttable anchor="vr_top_table7" title="Vector Set Response JSON Object">
          <ttcol align="left">JSON Value</ttcol>
          <ttcol align="left">Description</ttcol>
          <ttcol align="left">JSON type</ttcol>

	  <c>acv_version</c>
	  <c>Protocol version identifier</c>
          <c>value</c>

	  <c>vs_id</c>
	  <c>Unique numeric identifier for the vector set</c>
          <c>value</c>

	  <c>msecret</c>
	  <c>Master secret value.</c>
	  <c>value</c>

	  <c>kblock</c>
	  <c>Key block value of the expansion step.</c>
	  <c>value</c>

	</texttable>

	<t>The following table describes the JSON object that represents a vector set response for TPM.</t>

	<texttable anchor="vr_top_table8" title="Vector Set Response JSON Object">
          <ttcol align="left">JSON Value</ttcol>
          <ttcol align="left">Description</ttcol>
          <ttcol align="left">JSON type</ttcol>

	  <c>acv_version</c>
	  <c>Protocol version identifier</c>
          <c>value</c>

	  <c>vs_id</c>
	  <c>Unique numeric identifier for the vector set</c>
          <c>value</c>

	  <c>skey</c>
	  <c>Shared key value.</c>
	  <c>value</c>

	</texttable>




    </section>

    <!-- This PI places the pagebreak correctly (before the section title) in the text output. -->

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>TBD...</t>
    </section>

    <!-- Possibly a 'Contributors' section ... -->

    <section anchor="IANA" title="IANA Considerations">
      <t>This memo includes no request to IANA.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>Security considerations are addressed by the ACVP specification.</t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <references title="Normative References">
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->
      &RFC2119;

      <reference anchor="ACVP">
        <!-- the following is the minimum to make xml2rfc happy -->

        <front>
          <title>ACVP Specification</title>

          <author initials="authInitials" surname="authSurName">
            <organization>NIST</organization>
          </author>

          <date year="2016" />
        </front>
      </reference>
    </references>

    <section anchor="app-reg-ex" title="Example SP800-135 KDF Capabilities JSON Object">
      <t>The following is a example JSON object advertising support for SHA-256.</t>
      <figure>
        <artwork><![CDATA[


            {
                "algorithm": "TLS",
                "hmacval": "123456",
                "shaval": "654321",
		"methods" : ["TLS1.0/1.1", "TLS1.2"],
		"sha" : [ "SHA-256", SHA-384", SHA-512"]
            }
            ]]></artwork>
    </figure>
    </section>
    <section anchor="app-vs-ex" title="Example Test Vectors JSON Object">
      <t>The following is a example JSON object for SP800-135 KDF test vectors sent from the ACVP server to the crypto module.</t>
      <figure>
        <artwork><![CDATA[
                {
                  "acv_version": "0.2",
                  "vs_id": 1564,
                  "algorithm": "TLS",
                  "test_groups": [
                    {
                      "method": "TLS1.2",
		      "pmlen" : 384,
		      "kblen" : 1024,
                      "tests": [
                        {
                          "tc_id": 2170,
			  "pmsecret" : "1b4aecf96fc9029d4ce8c8539b6c97f25bcdf3510471f9607083dd2a6d25a0750bdfb2d87cb0ecc3046025c65d8d1a49",
			  "shrnd" : "45afd73d8cb73450898e1ed87ace19d14c5b10274771b331213181290b71fc2d",
			  "chrnd" : "75ee876ab02ea8fb3cb43426c7f28648946ae091281d66d35ff0e749d0547a6d",
			  "srnd" : "d352f20cb79b7e8fea6274850a15963a852728609e29a1e7c54257031a91721a",
			  "crnd" : "f667e99811fb1c226110ac606e7e06b11964956f22164d4b5d4e1304c2659436"
                        },
                      ]
                    },
                  ]
                }
            ]]></artwork>
      </figure>
    </section>
    <section anchor="app-results-ex" title="Example Test Results JSON Object">
      <t>The following is a example JSON object for SP800-135 KDF test results sent from the crypto module to the ACVP server.</t>
      <figure>
        <artwork><![CDATA[
                {
                    "acv_version": "0.2",
                    "vs_id": 1564,
                    "test_results": [
                        {
                            "tc_id": 2170,
			    "msecret" : "e9359c60c2b290b3666f3d1658e21c49fa2653f5b45b06815bfc45a9d01766e09d292bf7139f5621c4990a7360559c67",
			    "kblock" : "296f63ac740aa1f2953e86c9ae2073bc5d01d257fc20ec28c48c5f72d105a8ee408aeb56698f361a498b9be645de3ed4df6c6acb921517a3a962d3856f6a2cf749c13fbc2e2fb2d7b247e5adff311a348604213f2b137c49aac41cd657a0c2f50c6af92e48aa31e43fda97f2a60c4d4b1a4cf7a6ba49f4ecf4f96d9acb28c48",
                        }
                    ]
                }

            ]]></artwork>
        </figure>
    </section>
  </back>
</rfc>
