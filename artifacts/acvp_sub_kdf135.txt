



TBD                                                      B. Fussell, Ed.
Internet-Draft                                       Cisco Systems, Inc.
Intended status: Informational                                 June 2016
Expires: December 3, 2016


       ACVP Key Derivation Function Algorithm JSON Specification
                      draft-ietf-acvp-subkdf135-00

Abstract

   This document defines the JSON schema for using SP800-135 KDF
   algorithms with the ACVP specification.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on December 3, 2016.

Copyright Notice

   Copyright (c) 2016 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.






Fussell                 Expires December 3, 2016                [Page 1]

Internet-Draft                Sym Alg JSON                     June 2016


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Requirements Language . . . . . . . . . . . . . . . . . .   2
   2.  Capabilities Registration . . . . . . . . . . . . . . . . . .   2
     2.1.  Supported SP800-135 KDF Algorithms  . . . . . . . . . . .   4
     2.2.  Supported SP800-135 KDF Methodss  . . . . . . . . . . . .   5
     2.3.  Capabilities for each KDF Algorithm . . . . . . . . . . .   5
   3.  Test Vectors  . . . . . . . . . . . . . . . . . . . . . . . .  10
     3.1.  Test Groups JSON Schema . . . . . . . . . . . . . . . . .  10
     3.2.  Test Vectors JSON Schema  . . . . . . . . . . . . . . . .  14
   4.  Test Vector Responses . . . . . . . . . . . . . . . . . . . .  17
   5.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  20
   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  20
   7.  Security Considerations . . . . . . . . . . . . . . . . . . .  20
   8.  Normative References  . . . . . . . . . . . . . . . . . . . .  20
   Appendix A.  Example SP800-135 KDF Capabilities JSON Object . . .  21
   Appendix B.  Example Test Vectors JSON Object . . . . . . . . . .  21
   Appendix C.  Example Test Results JSON Object . . . . . . . . . .  22
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .  22

1.  Introduction

   The Automated Crypto Validation Protocol (ACVP) defines a mechanism
   to automatically verify the cryptographic implementation of a
   software or hardware crypto module.  The ACVP specification defines
   how a crypto module communicates with an ACVP server, including
   crypto capabilities negotiation, session management, authentication,
   vector processing and more.  The ACVP specification does not define
   algorithm specific JSON constructs for performing the crypto
   validation.  A series of ACVP sub-specifications define the
   constructs for testing individual crypto algorithms.  Each sub-
   specification addresses a specific class of crypto algorithms.  This
   sub-specification defines the JSON constructs for testing SP800-135
   KDF algorithms using ACVP.

1.1.  Requirements Language

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted in RFC 2119 [RFC2119].

2.  Capabilities Registration

   ACVP requires crypto modules to register their capabilities.  This
   allows the crypto module to advertise support for specific
   algorithms, notifying the ACVP server which algorithms need test
   vectors generated for the validation process.  This section describes



Fussell                 Expires December 3, 2016                [Page 2]

Internet-Draft                Sym Alg JSON                     June 2016


   the constructs for advertising support of SP800-135 KDF algorithms to
   the ACVP server.

   The algorithm capabilities are advertised as JSON objects within the
   'algorithms' value of the ACVP registration message.  The
   'algorithms' value is an array, where each array element is an
   individual JSON object defined in this section.  The 'algorithms'
   value is part of the 'capability_exchange' element of the ACVP JSON
   registration message.  See the ACVP specification for details on the
   registration message.  Each algorithm capability advertised is a
   self-contained JSON object.  The following JSON values are used for
   SP800-135 KDF algorithm capabilities:

   +-----------+---------------------+-------+--------------+----------+
   | JSON      | Description         | JSON  | Valid Values | Optional |
   | Value     |                     | type  |              |          |
   +-----------+---------------------+-------+--------------+----------+
   | algorithm | The KDF to be       | value | See Section  | No       |
   |           | validated           |       | 2.1          |          |
   | aesval    | The AES validation  | value | same or      | Yes      |
   |           | number or           |       | value        |          |
   |           | implemented in same |       |              |          |
   |           | implementation(SRTP |       |              |          |
   |           | )                   |       |              |          |
   | hmacval   | The HMAC validation | value | same or      | Yes      |
   |           | number or           |       | value        |          |
   |           | implemented in same |       |              |          |
   |           | implementation(IKEv |       |              |          |
   |           | 1, IKEv2, TLS, TPM) |       |              |          |
   | shaval    | The SHA validation  | value | same or      | Yes      |
   |           | number or           |       | value        |          |
   |           | implemented in same |       |              |          |
   |           | implementation(IKEv |       |              |          |
   |           | 1, IKEv2, ANS       |       |              |          |
   |           | X9.63-2001, SSH,    |       |              |          |
   |           | SNMP, TLS, TPM)     |       |              |          |
   | methods   | Type of method or   | array | See Section  | Yes      |
   |           | algorithm supported |       | 2.2          |          |
   | sha       | SHA functions       | array | SHA-1,       | Yes      |
   |           | supported           |       | SHA-224,     |          |
   |           |                     |       | SHA-256,     |          |
   |           |                     |       | SHA-384,     |          |
   |           |                     |       | SHA-512      |          |
   | keylen    | Key length minimum  | array | 0-65536      | Yes      |
   |           | and maximum         |       |              |          |
   | EngineID  | SNMP: Two engine    | array | 0-0xF        | Yes      |
   |           | IDs in hexidecimal, |       |              |          |
   |           | can be the same     |       |              |          |



Fussell                 Expires December 3, 2016                [Page 3]

Internet-Draft                Sym Alg JSON                     June 2016


   | plen      | SNMP: Password      | array | alphanumeric | Yes      |
   |           | minimum and maximum |       |              |          |
   |           | lengths             |       |              |          |
   | kdr0      | SRTP: Key           | array | all, 1-24    | Yes      |
   |           | Derivation Rate 0   |       |              |          |
   | kdr1      | SRTP: Key           | array | all, 1-24    | Yes      |
   |           | Derivation Rate 1   |       |              |          |
   | field     | ANSI X9.63: Minimum | array | 0-65536      | Yes      |
   |           | and Maximum field   |       |              |          |
   |           | size in             |       |              |          |
   | sharedinf | ANSI X9.63: Minimum | array | 0-1024       | Yes      |
   | o         | and Maximum         |       |              |          |
   |           | sharedinfo size in  |       |              |          |
   |           | bits                |       |              |          |
   | initiator | IKE: Minimum and    | array | 0-65536      | Yes      |
   |           | maximum lengths in  |       |              |          |
   |           | bytes               |       |              |          |
   | responder | IKE: Minimum and    | array | 0-65536      | Yes      |
   |           | maximum lengths in  |       |              |          |
   |           | bytes               |       |              |          |
   | psk       | IKE: Pre-shared key | array | 0-65536      | Yes      |
   |           | minimum and maximum |       |              |          |
   |           | lengths in bytes    |       |              |          |
   | dhkey     | IKE: Three Diffie-  | array | 0-65536      | Yes      |
   |           | Hellman shared      |       |              |          |
   |           | secret key lengths  |       |              |          |
   |           | in bytes            |       |              |          |
   | dkmlen    | IKE: Minimum and    | array | 0-65536      | Yes      |
   |           | maximum lengths of  |       |              |          |
   |           | the 7 keys derived  |       |              |          |
   |           | by SKEYSEED in      |       |              |          |
   |           | bytes               |       |              |          |
   +-----------+---------------------+-------+--------------+----------+

         Table 1: SP800-135 KDF Algorithm Capabilities JSON Values

   Note: Some optional values are required depending on the algorithm.
   For example, SHA-1 requires inbyte, inempty, inlen, and outlen.
   Failure to provide these values will result in the ACVP server
   returning an error to the ACVP client during registration.

2.1.  Supported SP800-135 KDF Algorithms

   The following SP800-135 KDF algorithms may be advertised by the ACVP
   compliant crypto module:

   o  IKEv1




Fussell                 Expires December 3, 2016                [Page 4]

Internet-Draft                Sym Alg JSON                     June 2016


   o  IKEv2

   o  TLS

   o  ANSI X9.63

   o  SSH

   o  SRTP

   o  SNMP

   o  TPM

2.2.  Supported SP800-135 KDF Methodss

   The following SP800-135 KDF methods may be advertised by the ACVP
   compliant crypto module:

   o  Digital Signature(IKEv1)

   o  Public Key Encryption(IKEv1)

   o  Pre-shared Key(IKEv1)

   o  TLS 1.0/1.1(TLS)

   o  TLS 1.2(TLS)

   o  TDES CBC(SSH)

   o  AES-128-CBC(SSH)

   o  AES-192-CBC(SSH)

   o  AES-256-CBC(SSH)

   o  AES-128-CBC(SRTP)

   o  AES-192-CBC(SRTP)

   o  AES-256-CBC(SRTP)

2.3.  Capabilities for each KDF Algorithm

   The following table describes the SP800-135 KDF IKEv1 JSON elements
   of the Test Group JSON object.




Fussell                 Expires December 3, 2016                [Page 5]

Internet-Draft                Sym Alg JSON                     June 2016


   +-----------+------------------------------------+-------+----------+
   | JSON      | Description                        | JSON  | Optional |
   | Value     |                                    | type  |          |
   +-----------+------------------------------------+-------+----------+
   | algorithm | IKEv1                              | value | No       |
   | hmacval   | The HMAC validation number or      | value | No       |
   |           | implemented in same implementation |       |          |
   | shaval    | The SHA validation number or       | value | No       |
   |           | implemented in same implementation |       |          |
   | methods   | See Section 2.2                    | array | No       |
   | initiator | Minimum and maximum initiator      | array | No       |
   |           | nonce sizes between 128 and 2048   |       |          |
   |           | bites                              |       |          |
   | responder | Minimum and maximum responder      | array | No       |
   |           | nonce sizes between 128 and 2048   |       |          |
   |           | bites                              |       |          |
   | psk       | Minimum and maximum pre-shared key | array | No       |
   |           | sizes in bytes                     |       |          |
   | dhkey     | Select one to three DH shared      | array | No       |
   |           | secret bit lengths                 |       |          |
   | sha       | SHA functions supported            | array | No       |
   +-----------+------------------------------------+-------+----------+

                Table 2: Capabilities Exchange JSON Object

   The following table describes the SP800-135 KDF IKEv2 JSON elements
   of the Capabilities Exchange JSON object.
























Fussell                 Expires December 3, 2016                [Page 6]

Internet-Draft                Sym Alg JSON                     June 2016


   +-----------+------------------------------------+-------+----------+
   | JSON      | Description                        | JSON  | Optional |
   | Value     |                                    | type  |          |
   +-----------+------------------------------------+-------+----------+
   | algorithm | IKEv2                              | value | No       |
   | hmacval   | The HMAC validation number or      | value | No       |
   |           | implemented in same implementation |       |          |
   | shaval    | The SHA validation number or       | value | No       |
   |           | implemented in same implementation |       |          |
   | initiator | Minimum and maximum initiator      | array | No       |
   |           | nonce sizes between 128 and 2048   |       |          |
   |           | bites                              |       |          |
   | responder | Minimum and maximum responder      | array | No       |
   |           | nonce sizes between 128 and 2048   |       |          |
   |           | bites                              |       |          |
   | dhkey     | Select one to three DH shared      | array | No       |
   |           | secret bit lengths                 |       |          |
   | sha       | SHA functions supported            | array | No       |
   | dkm       | Minimum and maximum lengths of the | array | No       |
   |           | 7 keys derived by SKEYSEED in      |       |          |
   |           | bytes                              |       |          |
   +-----------+------------------------------------+-------+----------+

                Table 3: Capabilities Exchange JSON Object

   The following table describes the SP800-135 KDF ANS X9.63 JSON
   elements of the Capabilities Exchange JSON object.

   +------------+-----------------------------------+-------+----------+
   | JSON Value | Description                       | JSON  | Optional |
   |            |                                   | type  |          |
   +------------+-----------------------------------+-------+----------+
   | algorithm  | ANS X9.63                         | value | No       |
   | shaval     | The SHA validation number or      | value | No       |
   |            | implemented in same               |       |          |
   |            | implementation                    |       |          |
   | field      | Minimum and maximum field size    | array | No       |
   | sharedinfo | Minimum and maximum sharedinfo    | array | No       |
   |            | length                            |       |          |
   | keylen     | Minimum and maximum key lengths,  | array | No       |
   |            | maximum less than or equal to     |       |          |
   |            | 4096                              |       |          |
   | sha        | SHA functions supported           | array | No       |
   +------------+-----------------------------------+-------+----------+

                Table 4: Capabilities Exchange JSON Object





Fussell                 Expires December 3, 2016                [Page 7]

Internet-Draft                Sym Alg JSON                     June 2016


   The following table describes the SP800-135 KDF SSH JSON elements of
   the Capabilities Exchange JSON object.

   +-----------+-----------------------------------+--------+----------+
   | JSON      | Description                       | JSON   | Optional |
   | Value     |                                   | type   |          |
   +-----------+-----------------------------------+--------+----------+
   | algorithm | SSH                               | value  | No       |
   | shaval    | The SHA validation number or      | value  | No       |
   |           | implemented in same               |        |          |
   |           | implementation                    |        |          |
   | methods   | See Section 2.2                   | array  | No       |
   | sha       | SHA functions supported           | array  | No       |
   +-----------+-----------------------------------+--------+----------+

                Table 5: Capabilities Exchange JSON Object

   The following table describes the SP800-135 KDF SRTP JSON elements of
   the Capabilities Exchange JSON object.

   +-----------+----------------------------------+---------+----------+
   | JSON      | Description                      | JSON    | Optional |
   | Value     |                                  | type    |          |
   +-----------+----------------------------------+---------+----------+
   | algorithm | SRTP                             | value   | No       |
   | aesval    | The AES validation number or     | value   | No       |
   |           | implemented in same              |         |          |
   |           | implementation                   |         |          |
   | methods   | See Section 2.2                  | array   | No       |
   | kdr0      | Key Derivation Rate 0            | array   | No       |
   |           |                                  | or all  |          |
   | kdr1      | Key Derivation Rate 0            | array   | No       |
   |           |                                  | or all  |          |
   +-----------+----------------------------------+---------+----------+

                Table 6: Capabilities Exchange JSON Object

   The following table describes the SP800-135 KDF SNMP JSON elements of
   the Capabilities Exchange JSON object.












Fussell                 Expires December 3, 2016                [Page 8]

Internet-Draft                Sym Alg JSON                     June 2016


   +-----------+-----------------------------------+--------+----------+
   | JSON      | Description                       | JSON   | Optional |
   | Value     |                                   | type   |          |
   +-----------+-----------------------------------+--------+----------+
   | algorithm | SNMP                              | value  | No       |
   | shaval    | The SHA validation number or      | value  | No       |
   |           | implemented in same               |        |          |
   |           | implementation                    |        |          |
   | EngineID  | Engine ID                         | value  | No       |
   | plen      | Password length                   | array  | No       |
   +-----------+-----------------------------------+--------+----------+

                Table 7: Capabilities Exchange JSON Object

   The following table describes the SP800-135 KDF TLS JSON elements of
   the Capabilities Exchange JSON object.

   +-----------+-----------------------------------+--------+----------+
   | JSON      | Description                       | JSON   | Optional |
   | Value     |                                   | type   |          |
   +-----------+-----------------------------------+--------+----------+
   | algorithm | TLS                               | value  | No       |
   | hmacval   | The HMAC validation number or     | value  | No       |
   |           | implemented in same               |        |          |
   |           | implementation                    |        |          |
   | shaval    | The SHA validation number or      | value  | No       |
   |           | implemented in same               |        |          |
   |           | implementation                    |        |          |
   | methods   | See Section 2.2                   | array  | No       |
   | sha       | SHA functions supported           | array  | No       |
   +-----------+-----------------------------------+--------+----------+

                Table 8: Capabilities Exchange JSON Object

   The following table describes the SP800-135 KDF TPM JSON elements of
   the Capabilities Exchange JSON object.

            +------------+-------------+-----------+----------+
            | JSON Value | Description | JSON type | Optional |
            +------------+-------------+-----------+----------+
            | algorithm  | TPM         | value     | No       |
            +------------+-------------+-----------+----------+

                Table 9: Capabilities Exchange JSON Object







Fussell                 Expires December 3, 2016                [Page 9]

Internet-Draft                Sym Alg JSON                     June 2016


3.  Test Vectors

   The ACVP server provides test vectors to the ACVP client, which are
   then processed and returned to the ACVP server for validation.  A
   typical ACVP validation session would require multiple test vector
   sets to be downloaded and processed by the ACVP client.  Each test
   vector set represents an individual Key Derivation Function (KDF),
   such as SNMP, SSH, etc.  This section describes the JSON schema for a
   test vector set used with SP800-135 KDF algorithms.

   The test vector set JSON schema is a multi-level hierarchy that
   contains meta data for the entire vector set as well as individual
   test vectors to be processed by the ACVP client.The following table
   describes the JSON elements at the top level of the hierarchy.

   +-------------+--------------------------------------------+--------+
   | JSON Value  | Description                                | JSON   |
   |             |                                            | type   |
   +-------------+--------------------------------------------+--------+
   | acv_version | Protocol version identifier                | value  |
   | vs_id       | Unique numeric identifier for the vector   | value  |
   |             | set                                        |        |
   | algorithm   | See Section 2.1                            | value  |
   | test_groups | Array of test group JSON objects, which    | array  |
   |             | are defined in Section 3.1                 |        |
   +-------------+--------------------------------------------+--------+

                     Table 10: Vector Set JSON Object

3.1.  Test Groups JSON Schema

   The test_groups element at the top level in the test vector JSON
   object is an array of test groups.  Test vectors are grouped into
   similar test cases to reduce the amount of data transmitted in the
   vector set.  For instance, all test vectors that use the same key
   size would be grouped together.  The Test Group JSON object contains
   meta data that applies to all test vectors within the group.  The
   following table describes the secure hash JSON elements of the Test
   Group JSON object.

   The KDF test group for IKEv1 is as follows:










Fussell                 Expires December 3, 2016               [Page 10]

Internet-Draft                Sym Alg JSON                     June 2016


   +---------+--------------------------------------+-------+----------+
   | JSON    | Description                          | JSON  | Optional |
   | Value   |                                      | type  |          |
   +---------+--------------------------------------+-------+----------+
   | method  | The method used for the test         | value | No       |
   |         | vectors.  See Section 2.2 for        |       |          |
   |         | possible values                      |       |          |
   | gxylen  | Diffie-Hellman shared secret length  | value | No       |
   | sha     | The SHA value used                   | value | No       |
   | initlen | Length of initiator nonce            | value | No       |
   | resplen | Length of responder nonce            | value | No       |
   | pkeylen | Pre-shared key length                | value | Yes      |
   | tests   | Array of individual test vector JSON | array | No       |
   |         | objects, which are defined in        |       |          |
   |         | Section 3.2                          |       |          |
   +---------+--------------------------------------+-------+----------+

                     Table 11: Test Group JSON Object

   The KDF test group for IKEv2 is as follows:

   +----------+-------------------------------------+-------+----------+
   | JSON     | Description                         | JSON  | Optional |
   | Value    |                                     | type  |          |
   +----------+-------------------------------------+-------+----------+
   | gxylen   | Diffie-Hellman shared secret length | value | No       |
   | sha      | The SHA type used for the test      | value | No       |
   |          | vectors                             |       |          |
   | initlen  | Length of initiator nonce           | value | No       |
   | resplen  | Length of responder nonce           | value | No       |
   | dkm      | Derived Key Matrerial for the       | value | No       |
   |          | parent security authority in bytes  |       |          |
   | dkmchild | Derived Key Matrerial for the child | value | No       |
   |          | security authority in bytes         |       |          |
   | tests    | Array of individual test vector     | array | No       |
   |          | JSON objects, which are defined in  |       |          |
   |          | Section 3.2                         |       |          |
   +----------+-------------------------------------+-------+----------+

                    Table 12: Vector Group JSON Object

   The KDF test group for ANS X9.63 is as follows:









Fussell                 Expires December 3, 2016               [Page 11]

Internet-Draft                Sym Alg JSON                     June 2016


   +-----------+------------------------------------+-------+----------+
   | JSON      | Description                        | JSON  | Optional |
   | Value     |                                    | type  |          |
   +-----------+------------------------------------+-------+----------+
   | sha       | The SHA type used for the test     | value | No       |
   |           | vectors                            |       |          |
   | shseclen  | The shared secret length used in   | value | No       |
   |           | bits                               |       |          |
   | shinfolen | The sharedinfo length used in bits | value | No       |
   | keylen    | The encryption key length used in  | value | No       |
   |           | bits                               |       |          |
   | tests     | Array of individual test vector    | array | No       |
   |           | JSON objects, which are defined in |       |          |
   |           | Section 3.2                        |       |          |
   +-----------+------------------------------------+-------+----------+

                    Table 13: Vector Group JSON Object

   The KDF test group for SSH is as follows:

   +----------+-------------------------------------+-------+----------+
   | JSON     | Description                         | JSON  | Optional |
   | Value    |                                     | type  |          |
   +----------+-------------------------------------+-------+----------+
   | sha      | The SHA type used for the test      | value | No       |
   |          | vectors                             |       |          |
   | shseclen | The shared secret length used in    | value | No       |
   |          | bits                                |       |          |
   | ivlen    | The IV length used in bits          | value | No       |
   | keylen   | The encryption key length used in   | value | No       |
   |          | bits                                |       |          |
   | tests    | Array of individual test vector     | array | No       |
   |          | JSON objects, which are defined in  |       |          |
   |          | Section 3.2                         |       |          |
   +----------+-------------------------------------+-------+----------+

                    Table 14: Vector Group JSON Object

   The KDF test group for SRTP is as follows:












Fussell                 Expires December 3, 2016               [Page 12]

Internet-Draft                Sym Alg JSON                     June 2016


   +--------+---------------------------------------+-------+----------+
   | JSON   | Description                           | JSON  | Optional |
   | Value  |                                       | type  |          |
   +--------+---------------------------------------+-------+----------+
   | method | The method used for the test vectors. | value | No       |
   |        | See Section 2.2 for possible values   |       |          |
   | kdr    | The Key Derivation Rate used          | value | No       |
   | tests  | Array of individual test vector JSON  | array | No       |
   |        | objects, which are defined in Section |       |          |
   |        | 3.2                                   |       |          |
   +--------+---------------------------------------+-------+----------+

                    Table 15: Vector Group JSON Object

   The KDF test group for SNMP is as follows:

   +----------+-------------------------------------+-------+----------+
   | JSON     | Description                         | JSON  | Optional |
   | Value    |                                     | type  |          |
   +----------+-------------------------------------+-------+----------+
   | engineID | engine ID as hexidecimal string     | value | No       |
   | plen     | Length of password                  | value | No       |
   | tests    | Array of individual test vector     | array | No       |
   |          | JSON objects, which are defined in  |       |          |
   |          | Section 3.2                         |       |          |
   +----------+-------------------------------------+-------+----------+

                    Table 16: Vector Group JSON Object

   The KDF test group for TLS is as follows:

   +--------+---------------------------------------+-------+----------+
   | JSON   | Description                           | JSON  | Optional |
   | Value  |                                       | type  |          |
   +--------+---------------------------------------+-------+----------+
   | method | The method used for the test vectors. | value | No       |
   |        | See Section 2.2 for possible values   |       |          |
   | pmlen  | Pre-master secret length in bits      | value | No       |
   | kblen  | Key block length in bits              | value | No       |
   | tests  | Array of individual test vector JSON  | array | No       |
   |        | objects, which are defined in Section |       |          |
   |        | 3.2                                   |       |          |
   +--------+---------------------------------------+-------+----------+

                    Table 17: Vector Group JSON Object

   The KDF test group for TPM is as follows:




Fussell                 Expires December 3, 2016               [Page 13]

Internet-Draft                Sym Alg JSON                     June 2016


   +-------+----------------------------------------+-------+----------+
   | JSON  | Description                            | JSON  | Optional |
   | Value |                                        | type  |          |
   +-------+----------------------------------------+-------+----------+
   | tests | Array of individual test vector JSON   | array | No       |
   |       | objects, which are defined in Section  |       |          |
   |       | 3.2                                    |       |          |
   +-------+----------------------------------------+-------+----------+

                    Table 18: Vector Group JSON Object

3.2.  Test Vectors JSON Schema

   Each test group contains an array of one or more test vectors.  Each
   test vector is a JSON object that represents a single test case to be
   processed by the ACVP client.  The following table describes the JSON
   elements for each SP800-135 KDF IKEv1 test vector.

   +----------+-----------------------------------+---------+----------+
   | JSON     | Description                       | JSON    | Optional |
   | Value    |                                   | type    |          |
   +----------+-----------------------------------+---------+----------+
   | tc_id    | Unique numeric identifier for the | value   | No       |
   |          | test case                         |         |          |
   | ckyi     | Initiator's cookie                | value   | No       |
   | ckyr     | Responder's cookie                | value   | No       |
   | ni       | Value of the initiator nonce      | value   | No       |
   | nr       | Value of the responder nonce      | value   | No       |
   | gxy      | Diffie-Hellman shared secret      | value   | No       |
   | pskey    | Value of the pre-shared key       | value   | Yes      |
   +----------+-----------------------------------+---------+----------+

                      Table 19: Test Case JSON Object

   The following table describes the JSON elements for each SP800-135
   KDF IKEv2 test vector.















Fussell                 Expires December 3, 2016               [Page 14]

Internet-Draft                Sym Alg JSON                     June 2016


   +----------+-----------------------------------+---------+----------+
   | JSON     | Description                       | JSON    | Optional |
   | Value    |                                   | type    |          |
   +----------+-----------------------------------+---------+----------+
   | tc_id    | Unique numeric identifier for the | value   | No       |
   |          | test case                         |         |          |
   | ni       | Value of the initiator nonce      | value   | No       |
   | nr       | Value of the responder nonce      | value   | No       |
   | gir      | Diffie-Hellman shared secret      | value   | No       |
   | girnew   | New Diffie-Hellman shared secret  | value   | No       |
   | spii     | security parameter indice of the  | value   | No       |
   |          | initiator                         |         |          |
   | spir     | security parameter indice of the  | value   | Yes      |
   |          | responder                         |         |          |
   +----------+-----------------------------------+---------+----------+

                      Table 20: Test Case JSON Object

   The following table describes the JSON elements for each SP800-135
   KDF ANS X9.63 test vector.

   +------------+---------------------------------+---------+----------+
   | JSON Value | Description                     | JSON    | Optional |
   |            |                                 | type    |          |
   +------------+---------------------------------+---------+----------+
   | tc_id      | Unique numeric identifier for   | value   | No       |
   |            | the test case                   |         |          |
   | Z          | Shared secret                   | value   | No       |
   | sharedinfo | Shared information              | value   | No       |
   +------------+---------------------------------+---------+----------+

                      Table 21: Test Case JSON Object

   The following table describes the JSON elements for each SP800-135
   KDF SSH test vector.

   +-----------+----------------------------------+---------+----------+
   | JSON      | Description                      | JSON    | Optional |
   | Value     |                                  | type    |          |
   +-----------+----------------------------------+---------+----------+
   | tc_id     | Unique numeric identifier for    | value   | No       |
   |           | the test case                    |         |          |
   | K         | Shared secret value              | value   | No       |
   | h         | Hash value                       | value   | No       |
   | sessionid | Session ID value                 | value   | No       |
   +-----------+----------------------------------+---------+----------+

                      Table 22: Test Case JSON Object



Fussell                 Expires December 3, 2016               [Page 15]

Internet-Draft                Sym Alg JSON                     June 2016


   The following table describes the JSON elements for each SP800-135
   KDF SRTP test vector.

   +------------+---------------------------------+---------+----------+
   | JSON Value | Description                     | JSON    | Optional |
   |            |                                 | type    |          |
   +------------+---------------------------------+---------+----------+
   | tc_id      | Unique numeric identifier for   | value   | No       |
   |            | the test case                   |         |          |
   | kmaster    | Master key value                | value   | No       |
   | msalt      | Master salt value               | value   | No       |
   | kdr        | Key derivation rate value       | value   | No       |
   | index      | Index value for SCTP            | value   | No       |
   | indexsrtcp | Index value for SRTCP           | value   | No       |
   +------------+---------------------------------+---------+----------+

                      Table 23: Test Case JSON Object

   The following table describes the JSON elements for each SP800-135
   KDF SNMP test vector.

   +----------+-----------------------------------+---------+----------+
   | JSON     | Description                       | JSON    | Optional |
   | Value    |                                   | type    |          |
   +----------+-----------------------------------+---------+----------+
   | tc_id    | Unique numeric identifier for the | value   | No       |
   |          | test case                         |         |          |
   | password | Password value                    | value   | No       |
   +----------+-----------------------------------+---------+----------+

                      Table 24: Test Case JSON Object

   The following table describes the JSON elements for each SP800-135
   KDF TLS test vector.

















Fussell                 Expires December 3, 2016               [Page 16]

Internet-Draft                Sym Alg JSON                     June 2016


   +----------+-----------------------------------+---------+----------+
   | JSON     | Description                       | JSON    | Optional |
   | Value    |                                   | type    |          |
   +----------+-----------------------------------+---------+----------+
   | tc_id    | Unique numeric identifier for the | value   | No       |
   |          | test case                         |         |          |
   | pmsecret | Pre-master secret value           | value   | No       |
   | shrnd    | Server Hello random value         | value   | No       |
   | chrnd    | Client Hello random value         | value   | No       |
   | srnd     | Server random value               | value   | No       |
   | crnd     | Client random value               | value   | No       |
   +----------+-----------------------------------+---------+----------+

                      Table 25: Test Case JSON Object

   The following table describes the JSON elements for each SP800-135
   KDF TPM test vector.

   +------------+---------------------------------+---------+----------+
   | JSON Value | Description                     | JSON    | Optional |
   |            |                                 | type    |          |
   +------------+---------------------------------+---------+----------+
   | tc_id      | Unique numeric identifier for   | value   | No       |
   |            | the test case                   |         |          |
   | len        | Length of the message or seed   | value   | No       |
   | auth       | Value of the authentication     | value   | No       |
   | nonce_even | Value of the nonce even         | value   | No       |
   | nonce_odd  | Value of the nonce odd          | value   | No       |
   | skey       | SKEY value generated            | value   | No       |
   +------------+---------------------------------+---------+----------+

                      Table 26: Test Case JSON Object

4.  Test Vector Responses

   After the ACVP client downloads and processes a vector set, it must
   send the resonse vectors back to the ACVP server.  The following
   table describes the JSON object that represents a vector set
   response.












Fussell                 Expires December 3, 2016               [Page 17]

Internet-Draft                Sym Alg JSON                     June 2016


   +--------------+--------------------------------------------+-------+
   | JSON Value   | Description                                | JSON  |
   |              |                                            | type  |
   +--------------+--------------------------------------------+-------+
   | acv_version  | Protocol version identifier                | value |
   | vs_id        | Unique numeric identifier for the vector   | value |
   |              | set                                        |       |
   | test_results | Array of JSON objects that represent each  | array |
   |              | test vector result, as defined by the      |       |
   |              | tables below                               |       |
   +--------------+--------------------------------------------+-------+

                 Table 27: Vector Set Response JSON Object

   The following table describes the JSON object that represents a
   vector set response for IKEv1.

        +------------+--------------------------------+-----------+
        | JSON Value | Description                    | JSON type |
        +------------+--------------------------------+-----------+
        | skeyid     | Results of the extraction step | value     |
        | skeyid_d   | Results of the expansion step  | value     |
        | skeyid_a   | Results of the expansion step  | value     |
        | skeyid_e   | Results of the expansion step  | value     |
        +------------+--------------------------------+-----------+

                 Table 28: Vector Set Response JSON Object

   The following table describes the JSON object that represents a
   vector set response for IKEv2.

   +----------------+--------------------------------------+-----------+
   | JSON Value     | Description                          | JSON type |
   +----------------+--------------------------------------+-----------+
   | skeyseed       | Results of the extraction step       | value     |
   | skeyseed_rekey | Results of the newly created skeyid  | value     |
   | dkm            | Derived key Material from expansion  | value     |
   |                | step                                 |           |
   | dkm_child      | Expansion step results for child SA  | value     |
   | dkm_child_dh   | Expansion step results for child SA  | value     |
   |                | DH                                   |           |
   +----------------+--------------------------------------+-----------+

                 Table 29: Vector Set Response JSON Object

   The following table describes the JSON object that represents a
   vector set response for ANS X9.63.




Fussell                 Expires December 3, 2016               [Page 18]

Internet-Draft                Sym Alg JSON                     June 2016


                +------------+----------------+-----------+
                | JSON Value | Description    | JSON type |
                +------------+----------------+-----------+
                | kdata      | Key data value | value     |
                +------------+----------------+-----------+

                 Table 30: Vector Set Response JSON Object

   The following table describes the JSON object that represents a
   vector set response for SSH.

       +------------+----------------------------------+-----------+
       | JSON Value | Description                      | JSON type |
       +------------+----------------------------------+-----------+
       | initiv_cs  | Client to server initial IV      | value     |
       | initiv_sc  | Server to client initial IV      | value     |
       | ekey_cs    | Client to server encryption key  | value     |
       | ekey_sc    | Server to client eencryption key | value     |
       | ikey_cs    | Client to server integrity key   | value     |
       | ikey_sc    | Server to client integrity key   | value     |
       +------------+----------------------------------+-----------+

                 Table 31: Vector Set Response JSON Object

   The following table describes the JSON object that represents a
   vector set response for SRTP.

           +------------+--------------------------+-----------+
           | JSON Value | Description              | JSON type |
           +------------+--------------------------+-----------+
           | srtp_ke    | SRTP encryption key      | value     |
           | srtp_ka    | SRTP authentication key  | value     |
           | srtp_ks    | SRTP salting key         | value     |
           | srtcp_ke   | SRTCP encryption key     | value     |
           | srtcp_ka   | SRTCP authentication key | value     |
           | srtcp_ks   | SRTCP salting key        | value     |
           +------------+--------------------------+-----------+

                 Table 32: Vector Set Response JSON Object

   The following table describes the JSON object that represents a
   vector set response for SNMP.









Fussell                 Expires December 3, 2016               [Page 19]

Internet-Draft                Sym Alg JSON                     June 2016


               +------------+------------------+-----------+
               | JSON Value | Description      | JSON type |
               +------------+------------------+-----------+
               | skey       | Shared key value | value     |
               +------------+------------------+-----------+

                 Table 33: Vector Set Response JSON Object

   The following table describes the JSON object that represents a
   vector set response for TLS.

    +------------+---------------------------------------+-----------+
    | JSON Value | Description                           | JSON type |
    +------------+---------------------------------------+-----------+
    | msecret    | Master secret value                   | value     |
    | kblock     | Key block value of the expansion step | value     |
    +------------+---------------------------------------+-----------+

                 Table 34: Vector Set Response JSON Object

   The following table describes the JSON object that represents a
   vector set response for TPM.

               +------------+------------------+-----------+
               | JSON Value | Description      | JSON type |
               +------------+------------------+-----------+
               | skey       | Shared key value | value     |
               +------------+------------------+-----------+

                 Table 35: Vector Set Response JSON Object

5.  Acknowledgements

   TBD...

6.  IANA Considerations

   This memo includes no request to IANA.

7.  Security Considerations

   Security considerations are addressed by the ACVP specification.

8.  Normative References

   [ACVP]     authSurName, authInitials., "ACVP Specification", 2016.





Fussell                 Expires December 3, 2016               [Page 20]

Internet-Draft                Sym Alg JSON                     June 2016


   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <http://www.rfc-editor.org/info/rfc2119>.

Appendix A.  Example SP800-135 KDF Capabilities JSON Object

   The following is a example JSON object advertising support for SHA-
   256.



               {
                   "algorithm": "TLS",
                   "hmacval": "123456",
                   "shaval": "654321",
                   "methods" : ["TLS1.0/1.1", "TLS1.2"],
                   "sha" : [ "SHA-256", SHA-384", SHA-512"]
               }

Appendix B.  Example Test Vectors JSON Object

   The following is a example JSON object for SP800-135 KDF test vectors
   sent from the ACVP server to the crypto module.

                {
                  "acv_version": "0.2",
                  "vs_id": 1564,
                  "algorithm": "TLS",
                  "test_groups": [
                    {
                      "method": "TLS1.2",
                      "pmlen" : 384,
                      "kblen" : 1024,
                      "tests": [
                        {
                          "tc_id": 2170,
                          "pmsecret" : "1b4aecf96fc9029d4ce8c8539b6c97f25bcdf3510471f9607083dd2a6d25a0750bdfb2d87cb0ecc3046025c65d8d1a49",
                          "shrnd" : "45afd73d8cb73450898e1ed87ace19d14c5b10274771b331213181290b71fc2d",
                          "chrnd" : "75ee876ab02ea8fb3cb43426c7f28648946ae091281d66d35ff0e749d0547a6d",
                          "srnd" : "d352f20cb79b7e8fea6274850a15963a852728609e29a1e7c54257031a91721a",
                          "crnd" : "f667e99811fb1c226110ac606e7e06b11964956f22164d4b5d4e1304c2659436"
                        },
                      ]
                    },
                  ]
                }




Fussell                 Expires December 3, 2016               [Page 21]

Internet-Draft                Sym Alg JSON                     June 2016


Appendix C.  Example Test Results JSON Object

   The following is a example JSON object for SP800-135 KDF test results
   sent from the crypto module to the ACVP server.

                {
                    "acv_version": "0.2",
                    "vs_id": 1564,
                    "test_results": [
                        {
                            "tc_id": 2170,
                            "msecret" : "e9359c60c2b290b3666f3d1658e21c49fa2653f5b45b06815bfc45a9d01766e09d292bf7139f5621c4990a7360559c67",
                            "kblock" : "296f63ac740aa1f2953e86c9ae2073bc5d01d257fc20ec28c48c5f72d105a8ee408aeb56698f361a498b9be645de3ed4df6c6acb921517a3a962d3856f6a2cf749c13fbc2e2fb2d7b247e5adff311a348604213f2b137c49aac41cd657a0c2f50c6af92e48aa31e43fda97f2a60c4d4b1a4cf7a6ba49f4ecf4f96d9acb28c48",
                        }
                    ]
                }


Author's Address

   Barry Fussell (editor)
   Cisco Systems, Inc.
   170 West Tasman Dr.
   San Jose, CA  95134
   USA

   Email: bfussell@cisco.com
























Fussell                 Expires December 3, 2016               [Page 22]
