



TBD                                                     A. Vassilev, Ed.
Internet-Draft            National Institute of Standards and Technology
Intended status: Informational                            August 5, 2016
Expires: February 6, 2017


     ACVP Deterministic Random Bit Generator (DRBG) Algorithm JSON
                             Specification
                       draft-ietf-acvp-subdrbg-00

Abstract

   This document defines the JSON schema for testing DRBG
   implementations from SP 800-90A with the ACVP specification.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on February 6, 2017.

Copyright Notice

   Copyright (c) 2016 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.





Vassilev                Expires February 6, 2017                [Page 1]

Internet-Draft                DRBG Alg JSON                  August 2016


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Requirements Language . . . . . . . . . . . . . . . . . .   2
   2.  Capabilities Registration . . . . . . . . . . . . . . . . . .   2
     2.1.  Supported DRBG Algorithms . . . . . . . . . . . . . . . .   6
   3.  Test Vectors  . . . . . . . . . . . . . . . . . . . . . . . .   7
     3.1.  Test Groups JSON Schema . . . . . . . . . . . . . . . . .   8
     3.2.  Test Vectors JSON Schema  . . . . . . . . . . . . . . . .   9
   4.  Test Vector Responses . . . . . . . . . . . . . . . . . . . .  10
   5.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  12
   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  12
   7.  Security Considerations . . . . . . . . . . . . . . . . . . .  12
   8.  Normative References  . . . . . . . . . . . . . . . . . . . .  12
   Appendix A.  Example Secure Hash Capabilities JSON Object . . . .  12
   Appendix B.  Example Test Vectors JSON Object . . . . . . . . . .  14
   Appendix C.  Example Test Results JSON Object . . . . . . . . . .  16
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .  18

1.  Introduction

   The Automated Crypto Validation Protocol (ACVP) defines a mechanism
   to automatically verify the cryptographic implementation of a
   software or hardware crypto module.  The ACVP specification defines
   how a crypto module communicates with an ACVP server, including
   crypto capabilities negotiation, session management, authentication,
   vector processing and more.  The ACVP specification does not define
   algorithm specific JSON constructs for performing the crypto
   validation.  A series of ACVP sub-specifications define the
   constructs for testing individual crypto algorithms.  Each sub-
   specification addresses a specific class of crypto algorithms.  This
   sub-specification defines the JSON constructs for testing DRBG crypto
   algorithms using ACVP.

1.1.  Requirements Language

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted in RFC 2119 [RFC2119].

2.  Capabilities Registration

   ACVP requires crypto modules to register their capabilities.  This
   allows the crypto module to advertise support for specific
   algorithms, notifying the ACVP server which algorithms need test
   vectors generated for the validation process.  This section describes
   the constructs for advertising support of hash algorithms to the ACVP
   server.



Vassilev                Expires February 6, 2017                [Page 2]

Internet-Draft                DRBG Alg JSON                  August 2016


   The algorithm capabilities are advertised as JSON objects within the
   'algorithms' value of the ACVP registration message.  The
   'algorithms' value is an array, where each array element is an
   individual JSON object defined in this section.  The 'algorithms'
   value is part of the 'capability_exchange' element of the ACVP JSON
   registration message.  See the ACVP specification for details on the
   registration message.  Each DRBG algorithm capability advertised is a
   self-contained JSON object.  The following JSON values are used for
   DRBG algorithm capabilities:

   +---------------+---------------+------+-----------------+----------+
   | JSON Value    | Description   | JSON | Valid Values    | Optional |
   |               |               | type |                 |          |
   +---------------+---------------+------+-----------------+----------+
   | algorithm     | The DRBG      | valu | See Section 2.1 | No       |
   |               | algorithm and | e    |                 |          |
   |               | mode to be    |      |                 |          |
   |               | validated.    |      |                 |          |
   |               |               |      |                 |          |
   | aesval        | The           | valu | same or value   | Yes      |
   |               | prerequisite  | e    |                 |          |
   |               | AES           |      |                 |          |
   |               | validation    |      |                 |          |
   |               | number or     |      |                 |          |
   |               | implemented   |      |                 |          |
   |               | in same imple |      |                 |          |
   |               | mentation.    |      |                 |          |
   |               |               |      |                 |          |
   | shaval        | The           | valu | same or value   | Yes      |
   |               | prerequisite  | e    |                 |          |
   |               | SHA           |      |                 |          |
   |               | validation    |      |                 |          |
   |               | number or     |      |                 |          |
   |               | implemented   |      |                 |          |
   |               | in same imple |      |                 |          |
   |               | mentation.    |      |                 |          |
   |               |               |      |                 |          |
   | tdesval       | The           | valu | same or value   | Yes      |
   |               | prerequisite  | e    |                 |          |
   |               | TDES          |      |                 |          |
   |               | validation    |      |                 |          |
   |               | number or     |      |                 |          |
   |               | implemented   |      |                 |          |
   |               | in same imple |      |                 |          |
   |               | mentation.    |      |                 |          |
   |               |               |      |                 |          |
   | hmacval       | The           | valu | same or value   | Yes      |
   |               | prerequisite  | e    |                 |          |



Vassilev                Expires February 6, 2017                [Page 3]

Internet-Draft                DRBG Alg JSON                  August 2016


   |               | HMAC          |      |                 |          |
   |               | validation    |      |                 |          |
   |               | number or     |      |                 |          |
   |               | implemented   |      |                 |          |
   |               | in same imple |      |                 |          |
   |               | mentation.    |      |                 |          |
   |               |               |      |                 |          |
   | Prediction    | an implementa | valu | yes, no         | No       |
   | Resistance    | tion that can | e    |                 |          |
   | Enabled       | be used with  |      |                 |          |
   |               | prediction    |      |                 |          |
   |               | resistance.   |      |                 |          |
   |               | See Table 1   |      |                 |          |
   |               | notes below.  |      |                 |          |
   |               |               |      |                 |          |
   | Prediction    | an implementa | valu | yes, no         | No       |
   | Resistance    | tion that can | e    |                 |          |
   | NOT Enabled   | be used       |      |                 |          |
   |               | without       |      |                 |          |
   |               | prediction    |      |                 |          |
   |               | resistance.   |      |                 |          |
   |               | See Table 1   |      |                 |          |
   |               | notes below.  |      |                 |          |
   |               |               |      |                 |          |
   | CTR_DRBG with | counter-mode  | valu | yes, no         | No       |
   | derivation    | (CTR) block   | e    |                 |          |
   | function      | cipher        |      |                 |          |
   |               | mechanism     |      |                 |          |
   |               | DRBGs as      |      |                 |          |
   |               | defined in    |      |                 |          |
   |               | NIST SP       |      |                 |          |
   |               | 800-90A for   |      |                 |          |
   |               | use with a    |      |                 |          |
   |               | derivation    |      |                 |          |
   |               | function. See |      |                 |          |
   |               | Table 1 notes |      |                 |          |
   |               | below.        |      |                 |          |
   |               |               |      |                 |          |
   | CTR_DRBG      | counter-mode  | valu | yes, no         | No       |
   | without       | (CTR) block   | e    |                 |          |
   | derivation    | cipher        |      |                 |          |
   | function      | mechanism     |      |                 |          |
   |               | DRBGs as      |      |                 |          |
   |               | defined in    |      |                 |          |
   |               | NIST SP       |      |                 |          |
   |               | 800-90A for   |      |                 |          |
   |               | use without a |      |                 |          |
   |               | derivation    |      |                 |          |



Vassilev                Expires February 6, 2017                [Page 4]

Internet-Draft                DRBG Alg JSON                  August 2016


   |               | function. See |      |                 |          |
   |               | Table 1 notes |      |                 |          |
   |               | below.        |      |                 |          |
   |               |               |      |                 |          |
   | Entropy input | the bit       | valu | at least the    | No       |
   |               | length of the | e    | maximum         |          |
   |               | entropy       |      | security        |          |
   |               | input. See    |      | strength        |          |
   |               | Table 1 notes |      | supported by    |          |
   |               | below.        |      | the mechanism/o |          |
   |               |               |      | ption, larger   |          |
   |               |               |      | values are      |          |
   |               |               |      | optional        |          |
   |               |               |      |                 |          |
   | Reseed        | Reseeding of  | valu | yes, no         | No       |
   | implemented   | the DRBG      | e    |                 |          |
   |               | shall be      |      |                 |          |
   |               | performed in  |      |                 |          |
   |               | accordance    |      |                 |          |
   |               | with the      |      |                 |          |
   |               | specification |      |                 |          |
   |               | for the given |      |                 |          |
   |               | DRBG          |      |                 |          |
   |               | mechanism.    |      |                 |          |
   |               | See Table 1   |      |                 |          |
   |               | notes below.  |      |                 |          |
   |               |               |      |                 |          |
   | Nonce         | .See Table 1  | valu | at least one    | Yes      |
   |               | notes below.  | e    | half of the     |          |
   |               |               |      | maximum         |          |
   |               |               |      | security        |          |
   |               |               |      | strength        |          |
   |               |               |      | supported by    |          |
   |               |               |      | the mechanism/o |          |
   |               |               |      | ption. Longer   |          |
   |               |               |      | nonces are      |          |
   |               |               |      | permitted.      |          |
   |               |               |      |                 |          |
   | Personalizati | .See Table 1  | Arra | set to zero or  | No       |
   | on string     | notes below.  | y    | the maximum     |          |
   |               |               |      | security        |          |
   |               |               |      | strength        |          |
   |               |               |      | supported by    |          |
   |               |               |      | the mechanism/o |          |
   |               |               |      | ption.          |          |
   |               |               |      |                 |          |
   | Additional    | .See Table 1  | Arra | set to zero or  | No       |
   | Input         | notes below.  | y    | the maximum     |          |



Vassilev                Expires February 6, 2017                [Page 5]

Internet-Draft                DRBG Alg JSON                  August 2016


   |               |               |      | security        |          |
   |               |               |      | strength        |          |
   |               |               |      | supported by    |          |
   |               |               |      | the mechanism/o |          |
   |               |               |      | ption.          |          |
   +---------------+---------------+------+-----------------+----------+

             Table 1: DRBG Algorithm Capabilities JSON Values

   Note 1: If an implementation can be used without prediction
   resistance, the flag Prediction Resistance NOT Enabled shall be set.

   Note 2: Implementations that either have prediction resistance always
   ON or always OFF shall have only one of the prediction resistance
   flags set.

   Note 3: Implementations that can be used either way will have both
   flags set.

   Note 4: For CTR_DRBG implementations, at least one of the derivation
   function options shall be set depending on the one actually used or
   both

   Note 5: All DRBGs are tested at their maximum supported security
   strength so this is the minimum bit length of the entropy input that
   ACVP will accept.  Longer entropy inputs are permitted, with the
   following exception: for CTR_DRBG with no df, the bit length must
   equal the seed length.

   Note 6: CTR_DRBG with no derivation function (no df) does not use a
   nonce; the nonce values, if supplied, will be ignored for this case.

   Note 7: CTR_DRBG with no derivation function (no df), where the
   second personalization string length must be less than or equal to
   the seed length.  If the implementation only supports one
   personalization string length, then set both numbers equal to each
   other.  If the implementation does not use a personalization string,
   set both numbers to 0 (zero).

   Note 8: The addtional input configuration and restrictions are the
   same as those for the personalization string.

2.1.  Supported DRBG Algorithms

   The following DRBG algorithms and modes may be advertised by the ACVP
   compliant crypto module:

   o  Hash_DRBG



Vassilev                Expires February 6, 2017                [Page 6]

Internet-Draft                DRBG Alg JSON                  August 2016


      *  SHA-1

      *  SHA-224

      *  SHA-256

      *  SHA-384

      *  SHA-512

      *  SHA-512/224

      *  SHA-512/256

   o  HMAC_DRBG

      *  SHA-1

      *  SHA-224

      *  SHA-256

      *  SHA-384

      *  SHA-512

      *  SHA-512/224

      *  SHA-512/256

   o  CTR_DRBG

      *  3KeyTDEA

      *  AES-128

      *  AES-192

      *  AES-256

3.  Test Vectors

   The ACVP server provides test vectors to the ACVP client, which are
   then processed and returned to the ACVP server for validation.  A
   typical ACVP validation session would require multiple test vector
   sets to be downloaded and processed by the ACVP client.  Each test
   vector set represents an individual algorithm, such as Hash_DRBG,




Vassilev                Expires February 6, 2017                [Page 7]

Internet-Draft                DRBG Alg JSON                  August 2016


   etc.  This section describes the JSON schema for a test vector set
   used with DRBG algorithms.

   The test vector set JSON schema is a multi-level hierarchy that
   contains meta data for the entire vector set as well as individual
   test vectors to be processed by the ACVP client.  The following table
   describes the JSON elements at the top level of the hierarchy.

   +-------------+---------------------------------------------+-------+
   | JSON Value  | Description                                 | JSON  |
   |             |                                             | type  |
   +-------------+---------------------------------------------+-------+
   | acv_version | Protocol version identifier                 | value |
   | vs_id       | Unique numeric identifier for the vector    | value |
   |             | set                                         |       |
   | algorithm   | The DRBG algorithm used for the test        | value |
   |             | vectors.  See Section 2.1 for possible      |       |
   |             | values.                                     |       |
   | mode        | The DRBG algorithm mode used for the test   | value |
   |             | vectors.  See Section 2.1 for possible      |       |
   |             | values.                                     |       |
   | test_groups | Array of test group JSON objects, which are | array |
   |             | defined in Section 3.1                      |       |
   +-------------+---------------------------------------------+-------+

                      Table 2: Vector Set JSON Object

3.1.  Test Groups JSON Schema

   The test_groups element at the top level in the test vector JSON
   object is an array of test groups.  Test vectors are grouped into
   similar test cases to reduce the amount of data transmitted in the
   vector set.  For instance, all test vectors that use the same key
   size would be grouped together.  The Test Group JSON object contains
   meta data that applies to all test vectors within the group.  The
   following table describes the DRBG JSON elements of the Test Group
   JSON object.

   ACVP allows default bit lengths for the inputs to specific
   algorithms, typically communicated as numerical value zero (0).. If
   an implementation does not support one of the defaults, the bit
   lengths the supported values shall be specified explicitly.









Vassilev                Expires February 6, 2017                [Page 8]

Internet-Draft                DRBG Alg JSON                  August 2016


   +--------------------------+--------------------+--------+----------+
   | JSON Value               | Description        | JSON   | Optional |
   |                          |                    | type   |          |
   +--------------------------+--------------------+--------+----------+
   | mode                     | the mode of the    | value  | No       |
   |                          | DRBG, see Section  |        |          |
   |                          | 2.1                |        |          |
   | use df                   | use df or not      | value, | Yes      |
   |                          |                    | yes/no |          |
   | PredictionResistance     | use prediction     | value  | No       |
   |                          | resistance         | yes/no |          |
   | EntropyInputLen          | entropy length     | value  | No       |
   | NonceLen                 | nonce length       | value  | No       |
   | PersonalizationStringLen | personalization    | value  | No       |
   |                          | string length      |        |          |
   | AdditonalInputLen        | additional input   | value  | No       |
   |                          | length             |        |          |
   | ReturnedBitsLen          | returned bits      | value  | No       |
   |                          | length             |        |          |
   | tests                    | Array of           | array  | No       |
   |                          | individual test    |        |          |
   |                          | vector JSON        |        |          |
   |                          | objects, which are |        |          |
   |                          | defined in Section |        |          |
   |                          | 3.2                |        |          |
   +--------------------------+--------------------+--------+----------+

                      Table 3: Test Group JSON Object

3.2.  Test Vectors JSON Schema

   Each test group contains an array of one or more test vectors.  Each
   test vector is a JSON object that represents a single test case to be
   processed by the ACVP client.  The following table describes the JSON
   elements for each DRBG test vector.
















Vassilev                Expires February 6, 2017                [Page 9]

Internet-Draft                DRBG Alg JSON                  August 2016


   +---------------------------+--------------------+-------+----------+
   | JSON Value                | Description        | JSON  | Optional |
   |                           |                    | type  |          |
   +---------------------------+--------------------+-------+----------+
   | tc_id                     | Unique numeric     | value | No       |
   |                           | identifier for the |       |          |
   |                           | test case          |       |          |
   | EntropyInput              | entropy value      | value | No       |
   | Nonce                     | Value of the nonce | value | No       |
   | PersonalizationString     | value of the       | value | No       |
   |                           | personlization     |       |          |
   |                           | string             |       |          |
   | PredictionResistanceInput | array of additonal | array | No       |
   |                           | input/entropy      |       |          |
   |                           | input value pairs  |       |          |
   |                           | for prediction     |       |          |
   |                           | resistance         |       |          |
   |                           | testing. See Table |       |          |
   |                           | 5                  |       |          |
   +---------------------------+--------------------+-------+----------+

                    Table 4: DRBG Test Case JSON Object

   Each prediction resistance test group contains an array of one or
   more test vectors, typically two.  Each test vector is a JSON object
   that represents a single test case to be processed by the ACVP
   client.  The following table describes the JSON elements for each
   DRBG predcition resistance test vector.

   +-----------------+------------------------------+-------+----------+
   | JSON Value      | Description                  | JSON  | Optional |
   |                 |                              | type  |          |
   +-----------------+------------------------------+-------+----------+
   | AdditionalInput | value of the additoinal      | value | No       |
   |                 | input string to use in       |       |          |
   |                 | predition resistance tests   |       |          |
   | EntropyInputPR  | value of the entropy input   | value | No       |
   |                 | to use in prediction         |       |          |
   |                 | resistance tests             |       |          |
   +-----------------+------------------------------+-------+----------+

           Table 5: Prediction Resistance Test Case JSON Object

4.  Test Vector Responses

   After the ACVP client downloads and processes a vector set, it must
   send the resonse vectors back to the ACVP server.  The following




Vassilev                Expires February 6, 2017               [Page 10]

Internet-Draft                DRBG Alg JSON                  August 2016


   table describes the JSON object that represents a vector set
   response.

   +--------------+--------------------------------------------+-------+
   | JSON Value   | Description                                | JSON  |
   |              |                                            | type  |
   +--------------+--------------------------------------------+-------+
   | acv_version  | Protocol version identifier                | value |
   | vs_id        | Unique numeric identifier for the vector   | value |
   |              | set                                        |       |
   | test_results | Array of JSON objects that represent each  | array |
   |              | test vector result, which uses the same    |       |
   |              | JSON schema as defined in Section 3.2      |       |
   +--------------+--------------------------------------------+-------+

                 Table 6: Vector Set Response JSON Object

   Each test group contains an array of one or more test vectors.  Each
   test vector is a JSON object that represents a single test case to be
   processed by the ACVP client.  The following table describes the JSON
   elements for each DRBG test vector.

   +---------------------------+--------------------+-------+----------+
   | JSON Value                | Description        | JSON  | Optional |
   |                           |                    | type  |          |
   +---------------------------+--------------------+-------+----------+
   | tc_id                     | Unique numeric     | value | No       |
   |                           | identifier for the |       |          |
   |                           | test case          |       |          |
   | EntropyInput              | entropy value      | value | No       |
   | Nonce                     | Value of the nonce | value | No       |
   | PersonalizationString     | value of the       | value | No       |
   |                           | personlization     |       |          |
   |                           | string             |       |          |
   | PredictionResistanceInput | array of additonal | array | No       |
   |                           | input/entropy      |       |          |
   |                           | input value pairs  |       |          |
   |                           | for prediction     |       |          |
   |                           | resistance         |       |          |
   |                           | testing. See Table |       |          |
   |                           | 5                  |       |          |
   | ReturnedBits              | value of the       | value | No       |
   |                           | computed DRBG      |       |          |
   |                           | output             |       |          |
   +---------------------------+--------------------+-------+----------+

                Table 7: DRBG Test Case Results JSON Object




Vassilev                Expires February 6, 2017               [Page 11]

Internet-Draft                DRBG Alg JSON                  August 2016


5.  Acknowledgements

   TBD...

6.  IANA Considerations

   This memo includes no request to IANA.

7.  Security Considerations

   Security considerations are addressed by the ACVP specification.

8.  Normative References

   [ACVP]     authSurName, authInitials., "ACVP Specification", 2016.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <http://www.rfc-editor.org/info/rfc2119>.

Appendix A.  Example Secure Hash Capabilities JSON Object

   The following is a example JSON object advertising support for
   CTR_DRBG with 3KeyTDEA.



               {
                   "algorithm": "CTR_DRBG",
                   "mode": "3KeyTDEA",
                   "df":"yes",
                   "PredictionResitance": "yes",
                   "EntropyInputLen":"112",
                   "NonceLen":"56",
                   "PersnolazationStringLen":"0",
                   "AdditionalInputLen":"0",
                   "ReturnedBitsLen":"256"
               }

   The following is a example JSON object advertising support for
   CTR_DRBG with AES-128.









Vassilev                Expires February 6, 2017               [Page 12]

Internet-Draft                DRBG Alg JSON                  August 2016


               {
                   "algorithm": "CTR_DRBG",
                   "mode": "AES-128",
                   "df":"yes",
                   "PredictionResitance": "yes",
                   "EntropyInputLen":"128",
                   "NonceLen":"64",
                   "PersnolazationStringLen":"0",
                   "AdditionalInputLen":"0",
                   "ReturnedBitsLen":"512"
               }

   The following is a example JSON object advertising support for
   Hash_DRBG with AES-256.



               {
                   "algorithm": "Hash_DRBG",
                   "mode": "AES-256",
                   "PredictionResitance": "yes",
                   "EntropyInputLen":"256",
                   "NonceLen":"128",
                   "PersnolazationStringLen":"0",
                   "AdditionalInputLen":"0",
                   "ReturnedBitsLen":"1024"
               }

   The following is a example JSON object advertising support for
   HMAC_DRBG with AES-256.



               {
                   "algorithm": "HMAC_DRBG",
                   "mode": "AES-256",
                   "PredictionResitance": "yes",
                   "EntropyInputLen":"256",
                   "NonceLen":"128",
                   "PersnolazationStringLen":"0",
                   "AdditionalInputLen":"0",
                   "ReturnedBitsLen":"1024"
               }








Vassilev                Expires February 6, 2017               [Page 13]

Internet-Draft                DRBG Alg JSON                  August 2016


Appendix B.  Example Test Vectors JSON Object

   The following is a example JSON object for CTR_DRBG test vectors sent
   from the ACVP server to the crypto module.

                {
                  "acv_version": "0.2",
                  "vs_id": 1133,
                  "algorithm": "CTR_DRBG",
                  "mode": "3KeyTDEA",
                  "df":"yes",
                  "PredictionResitance": "yes",
                  "EntropyInputLen":"128",
                  "NonceLen":"64",
                  "PersnolazationStringLen":"0",
                  "AdditionalInputLen":"0",
                  "ReturnedBitsLen":"512"
                  "test_groups": [
                    {
                      "type": "long",
                      "tests": [
                        {
                          "tc_id": 1815,
                          "EntropyInput":"78aac2cb444594e29dc97b0195b5",
                          "Nonce":"41ef9c67ffe438",
                          "PersonalizationString":"b8e84de200a9239a043a7a9a6a03",
                          "AdditionalInput":"f1e8edf002b331ec49ec0c1f18fa",
                          "EntropyInputPR": "6cd4096638bbaeda28289582a10d",
                          "AdditionalInput" : "f5357737023e3304508a00b3ba02",
                          "EntropyInputPR" : "a0cdf5c1c670fd7b65a4f0a899e4"
                          },
                        {
                          "tc_id": 1816,
                          "EntropyInput" : "b8ab88b9c5fda8544b90a043684e",
                          "Nonce": "f1bcc6ff60dd37",
                          "PersonalizationString" : "018c1f9d22f3c7f701a5f1cab07d",
                          "AdditionalInput" : "356a6e908bfce2d660f20f3fbd1e",
                          "EntropyInputPR" : "bed693401bfd53ce4c36c2233ada",
                          "AdditionalInput" : "4321b3ab3a0ce88e02bdcd0306d9",
                          "EntropyInputPR" : "a632ef16f20da17f02e484df4a41"
                        }
                      ]
                    },
                  ]
                }

   The following is a example JSON object for HMAC_DRBG test vectors
   sent from the ACVP server to the crypto module.



Vassilev                Expires February 6, 2017               [Page 14]

Internet-Draft                DRBG Alg JSON                  August 2016


                {
                  "acv_version": "0.2",
                  "vs_id": 1146,
                  "algorithm": "HMAC_DRBG",
                  "mode": "AES-256",
                  "PredictionResitance": "yes",
                  "EntropyInputLen":"256",
                  "NonceLen":"128",
                  "PersnolazationStringLen":"0",
                  "AdditionalInputLen":"0",
                  "ReturnedBitsLen":"1024"
                  "test_groups": [
                    {
                      "type": "long",
                      "tests": [
                        {
                          "tc_id": 2111,
                          "EntropyInput":"ee3392c5f3de6f3f8c4f28d852afacd2cbaa89ed48d1c5d4311662962aa70a98",
                          "Nonce":"b991a820fac75fd02642ad8fa651eda4",
                          "PersonalizationString":"30f3a50b0e2309dab93ea2aa095e5df8e4b2a42690572b31e53fb79a195481e5",
                          "AdditionalInput":"4ea46abe95b2e4184113f908ae30123207d481908b7af7ef348657bbf3b4a002",
                          "EntropyInputPR": "e4413a2e404f12c644b0b1d7a49a0fbf3d8703d571ffd02168c11b4ade6fc903",
                          "AdditionalInput" : "61b7204c8fef294f2a9f2e73a83a8a7a04c38e3b3eaaed1b920abfceab912492",
                          "EntropyInputPR" : "968ea185d1439fa2d67eb55ac93ba596b1ea679de7c6e44f80dc6f213455f1ed"
                          },
                        {
                          "tc_id": 2112,
                          "EntropyInput" : "a0ace75784b97224de2957e5f60dc85b25331fcf7901f37418d3c9de17ed4261",
                          "Nonce": "b671308068fc7909a360c772f62a4c5e",
                          "PersonalizationString" : "338d5f2bd93262da154385e9ed90b7862e3c892f13e1d7d19924b2eb8b3bab21",
                          "AdditionalInput" : "7acd8bfae17ff4edbac3437817d6b3fce12a04c4034ac6bef0b1b88f7dcd7c85",
                          "EntropyInputPR" : "47b26bbe93a5cc19a410523a072e04333f06c54af0049fc41e66213763020ef7",
                          "AdditionalInput" : "d4b24c74538e3a1083a2cc0a4414a9f558f0a2dc186e3b9a5294cd541acdad87",
                          "EntropyInputPR" : "acb63f3b5995608a1331641cd43208444a9ec95e4bb2a438f614156b6a77c8c3"
                        }
                      ]
                    },
                  ]
                }

   The following is a example JSON object for Hash_DRBG test vectors
   sent from the ACVP server to the crypto module.









Vassilev                Expires February 6, 2017               [Page 15]

Internet-Draft                DRBG Alg JSON                  August 2016


                {
                  "acv_version": "0.2",
                  "vs_id": 1156,
                  "algorithm": "Hash_DRBG",
                  "mode": "SHA-256",
                  "PredictionResitance": "yes",
                  "EntropyInputLen":"256",
                  "NonceLen":"128",
                  "PersnolazationStringLen":"0",
                  "AdditionalInputLen":"0",
                  "ReturnedBitsLen":"1024"
                  "test_groups": [
                    {
                      "type": "long",
                      "tests": [
                        {
                          "tc_id": 2151,
                          "EntropyInput":"b37f442929f21306d8750a82fc6b362a574babd3ed60f19a35c37e469a5f14bf",
                          "Nonce":"c3283de7bc8395b6acccbb5ea5fa96bb",
                          "PersonalizationString":"5674ab88573f76754c9c23251ced43004e4e0839b8238dc02738c52fd4f0c6d2",
                          "AdditionalInput":"54b90323d3985459897b6743006bc0b573c2374512bd4af306e094c791b3fe83",
                          "EntropyInputPR": "c7825bcd4d93f29759e605a71cbd7d926ad7ea5cef223e0c18ef9f6fbd60ca59",
                          "AdditionalInput" : "589b34ca088e88ebc0013ebe1371ba59981a7dc28a430f1878dbea58da48bbc8",
                          "EntropyInputPR" : "3ab094c46749b53452230b757e06a0e73ae98154fee23b219b2d2cb3799f3ddd"
                          },
                        {
                          "tc_id": 2152,
                          "EntropyInput" : "453ee7be8e0c38345bc5bd41b3fc966bee51865cbdefef8de88c2e2f98e0d89c",
                          "Nonce": "caab6531ed1d096668e7d7e5bb8f306b",
                          "PersonalizationString" : "ff6f535e2b41be7c17d4cfc0f14868ab838b739e643d269d624a1a0637152d78",
                          "AdditionalInput" : "725ae7b8d850fbfda11ec61ff42ce3b886cff4ab2adeffc2cb9bc23d5dc59db9",
                          "EntropyInputPR" : "6a126e70a096b6e7ac6a717a6becbe98e1dee0c2181c5353701fcead24b0fe4e",
                          "AdditionalInput" : "ff3cd93f88072a2fc8cd0e4a4317a97b504f8fc6beb6753214455b12f0044dfc",
                          "EntropyInputPR" : "dba352082e876c90f5a1411670b47610d7c3b6116b00a1d0056702bb8fa3b78e"
                        }
                      ]
                    },
                  ]
                }

Appendix C.  Example Test Results JSON Object

   The following is a example JSON object for CTR_DRBG with 3KeyTDEA
   test results sent from the crypto module to the ACVP server.







Vassilev                Expires February 6, 2017               [Page 16]

Internet-Draft                DRBG Alg JSON                  August 2016


                {
                    "acv_version": "0.2",
                    "vs_id": 1133,
                    "test_results": [
                        {
                            "tc_id": 1815,
                            "ReturnedBits ": "4565e85447af7134775816588f1b0faf8b402a951db17753d01809d14724449d"
                        },
                        {
                            "tc_id": 1815,
                            "ReturnedBits": "b67acc3b2231ec54344d5be2ee8fcac72e83651b8cf2ac2bc361171b882f0965"
                        }
                    ]
                }


   The following is a example JSON object for HMAC_DRBG test results
   sent from the crypto module to the ACVP server.

                {
                    "acv_version": "0.2",
                    "vs_id":  1146,
                    "test_results": [
                        {
                            "tc_id": 2111,
                            "ReturnedBits": "e42130fd1d920a2bcd177c0de0d5834c9b05a6ecdf3bc46e3733869f762dc2e7d97357934d8061db033670c3739369924b321216c30b3e45d9bc8c0bad61d8fdc03dffd70725e793ebfe98bc15358764402f4e2c71be4acfad898649b51c5d2625374a61be2b59833d2dfcc593eddcffbac79016b22a992ae6f5f82bae194e06"
                        },
                       {
                            "tc_id": 2112,
                            "ReturnedBits": "495b2a0de6b5fc4545fdd5fec93362d1203b1dfef3528f7d852fb89ba1c45059bd52cb7a80176dd71c26108912be6f3c33d95d5cee92349ba6bf16db42c4c828729a9b4a5f53e60655df55f0e58753ad2785d53fc44fe98a5e214e8172554bd53047f38a67f8a5af11111e33dcc5e705824a78d661839994f3529cec5a83a9f0"
                       }
                    ]
                }

   The following is a example JSON object for Hash_DRBG test results
   sent from the crypto module to the ACVP server.















Vassilev                Expires February 6, 2017               [Page 17]

Internet-Draft                DRBG Alg JSON                  August 2016


                {
                    "acv_version": "0.2",
                    "vs_id": 1156,
                    "test_results": [
                        {
                            "tc_id": 2151,
                            "ReturnedBits ": "3bcb4371e388a8c453f16fb48e46859b7cbd1b8307681083fb8c10e7a6ea77ff89f6ce2ab9efff8ea11e95117e577a139e5a2f99786282fefadf07c13d7ceb123d81f93d262ad84d9d1589ea6bb760a0cabd75285e29a11bb97a8ff3317d839639866195c3364c98f250ce97c974c06805821e66ce214333d275d8a01a6c69a7"
                        },
                       {
                            "tc_id": 2152,
                            "ReturnedBits": "0302cb504af55d89d8aa03a05d5cd9969c0650e32c27d32dc5db991b95297885a593cb81ee2fbfea273f61830fa0d548c1d89ff1d8495a9fd4dee2c7ddc075620bec06d3641232b4433d229f2b4a791a11709fe3d6fe4f809f97d113bdaebe255223e6e5914296886861d28331ea702bf05f63a8fd62b97a845de43012ed4a55"
                       }
                    ]
                }

Author's Address

   Apostol Vassilev (editor)
   National Institute of Standards and Technology
   100 Bureau Dr.
   Gaithersburg, MD  20899
   USA

   Email: apostol.vassilev@nist.gov



























Vassilev                Expires February 6, 2017               [Page 18]
